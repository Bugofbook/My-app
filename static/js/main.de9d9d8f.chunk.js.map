{"version":3,"sources":["components/menu/initialstatedata.js","data/pagesconster.js","components/menu/MainMenu.js","redux/constants.js","components/ui/Gamelocalstore.js","components/ui/Gameinfo.js","components/ui/Square.js","components/ui/Board.js","components/ui/GameMain.js","components/ui/page.js","functions/gamebasics.js","functions/connectgame.js","components/contain/TioTeoTic.js","functions/catchgame.js","components/contain/othello.js","components/contain/home.js","components/contain/contain.js","redux/actions/GameDataAction.js","redux/actions/PlayerDataAction.js","data/gamerule.js","components/menu/pages.js","redux/reducers/PlayerDataReducers.js","redux/reducers/GameDataReducer.js","redux/Store.js","index.js"],"names":["Board","PAGES","id","router","zh_name","selectedStyle","backgroundColor","color","MainMenu","react_default","a","createElement","className","NavLink","to","map","page","index","key","activeStyle","concat","GAMEDATA","PLAYERDATA","GameLocalStore","_ref","_ref$store","store","_ref$deldata","deldata","f","_ref$loadingdata","loadingdata","length","gamedata","type","value","style","width","onClick","date","toLocaleString","GameInFo","_ref$players","players","_ref$history","history","_ref$info","info","_ref$adddata","adddata","_ref$jumpto","jumpto","Gameinfo_GameEndBottom","gamestate","Gameinfo_GameStepShow","list","actionlists","step","GameEndBottom","_ref2","_ref2$gamestate","_ref2$adddata","GameStepShow","_ref3","_ref3$history","_ref3$players","_ref3$list","_ref3$jumpto","_element","libotton","owner","rowskey","columnskey","readOnly","Square","_ref$value","_ref$className","showChess","height","borderRadius","border","Row","_ref$rows","rows","_ref$rowclass","rowclass","_ref$change","change","columns","columnkey","ui_Square","classname","_ref2$Squares","Squares","_ref2$boardclass","boardclass","_ref2$change","Board_Row","GameMain","_ref$current","current","gamerule","_ref$mainchange","mainchange","gamename","showgamestate","ui_Board","squares","winner","loser","nowplayer","GamePage","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","setState","initialstate","state","slice","gameinfo","objectSpread","turns","window","setTimeout","chesshistory","reduce","_previousValue","action","bind","assertThisInitialized","inherits","createClass","_this2","_this$state","_this$props","GameMain_GameMain","Gameinfo_GameInFo","Gamelocalstore_GameLocalStore","localstore","React","Component","setChessToSquares","chess","lock","addChessToLists","arguments","undefined","SquaresDeepCopy","assign","FindLength","VectorX","VectorY","connectlength","CurrentPoint","NowSquares","Value","contilen","CheckValue","lengthx","i","tapointx","tapointy","j","Rowlength","Columnlength","Slashlength","BackSlashlength","removeOldChess","ProcessObject","lists","oldchess","filter","_chess","addNewChess","ConeectJudge","JudgeWinner","TioTeoTicSpecialForm","_GamePage","_getPrototypeOf2","_len","args","Array","_key","apply","player","newsquares","newchess","processobject","compose","showlists","TioTeoTicForm","_GamePage2","_getPrototypeOf3","_len2","_key2","GomokuForm","_GamePage3","_getPrototypeOf4","_this3","_len3","_key3","takeLineChessFromSquares","Vector","maxlength","interval","resultarray","chessx","chessy","getCatchedChessFormArray","checkarray","startchess","_checkarray","toArray","otherchess","OthelloForm","JudgeGame","organizeBoard","player1chess","player2chess","changeArrays","fill","_k","Math","floor","vec","chessArray","calculationArrays","accumulator","currentValue","changenumber","presquares","nowchess","HomeForm","movegamedata","moveplayerdata","playerdata","clear","loadingonlinedata","processdata","url","fetch","then","response","json","onlinedata","data","player1","player2","gameDatas","mapDispatchToProps","dispatch","DelGameData","v4","Date","AddGameData","HOCforconnect","component","connect","playerData","mapStateToProps","TioTeoTicSpecialGame","TioTeoTicGame","GomokuGame","OthelloGame","HomePage","ChangePlayerName","makeEmptyBoard","row","column","makeGameHistoryObject","board","objecta","makeGameInfoObject","TicTacToeBoard","TicTacToeNeedKey","TicTacToeInitialData","TicTacToeSpecialInitialData","GomokuInitialData","OthelloStartBoard","OthelloInitialData","TicTacToeRule","Fragment","TicTacToeSpecialRule","GomokuRule","OthelloRule","PageTemplate","children","MainMenu_MainMenu","Home","pages_PageTemplate","TicTacToe","TicTacToeSpecial","Gomoku","Othello","Whoops404","location","pathname","gameData","initialDate","logger","next","saver","result","localStorage","JSON","stringify","getState","initialState","applyMiddleware","createStore","combineReducers","parse","storeFactory","render","es","HashRouter","Switch","Route","exact","path","Pages","document","getElementById"],"mappings":"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","file":"static/js/main.de9d9d8f.chunk.js","sourcesContent":["import { SquaresDeepCopy ,setChessToSquares} from \"../../functions/gamebasics\";\n\nexport const makeEmptyBoard = (row,column) => SquaresDeepCopy(Array(row).fill(Array(column).fill({value:\"\", owner:\"\", lock: false})))\n\nexport const makeGameHistoryObject = (board,objecta = {}) => Object.assign({\tnowplayer: \"player1\"},{squares: board},objecta)\n\t\nexport const makeGameInfoObject = (gamename) => ({\n\tgamename,\n\tgamestate: \"Game Begin\",\n\twinner: \"\",\n\tloser: \"\",\n\tturns: 0,\n\tactionlists: [],\n})\n\nexport const BoardProcessedChess = (chessarray, Board) => {\n\tchessarray.reduce((presquares,nowchess) => setChessToSquares(nowchess,presquares),Board)\n\treturn Board\n\t}\n\n//\n\nconst TicTacToeBoard = makeEmptyBoard(3,3)\nconst TicTacToeNeedKey = {showlists : []}\n\nexport const TicTacToeInitialData = {\n\thistory: [makeGameHistoryObject(TicTacToeBoard,TicTacToeNeedKey)],\n\tgameinfo: makeGameInfoObject(\"TioTeoTic\"),\n}\n\nexport const TicTacToeSpecialInitialData = {\n\thistory: [makeGameHistoryObject(TicTacToeBoard,TicTacToeNeedKey)],\n\tgameinfo: makeGameInfoObject(\"TioTeoTicSpecial\"),\n}\n\n//\nconst GomokuBoard = makeEmptyBoard(15,15)\nexport const GomokuInitialData = {\n\thistory: [makeGameHistoryObject(GomokuBoard,TicTacToeNeedKey)],\n\tgameinfo: makeGameInfoObject(\"Gomoku\"),\n}\n\n//\n\t\nlet  OthelloStartArray = [\n\t{rowskey: 3, columnskey: 3, value: \"BlackChess\", owner: \"player1\", lock: true},\n\t {rowskey: 3, columnskey: 4, value: \"WhiteChess\", owner: \"player1\", lock: true},\n\t {rowskey: 4, columnskey: 3, value: \"WhiteChess\", owner: \"player1\", lock: true},\n\t {rowskey: 4, columnskey: 4, value: \"BlackChess\", owner: \"player1\", lock: true}\n]\n\nlet  OthelloStartBoard = makeEmptyBoard(8,8)\n\nlet OthelloBoard = BoardProcessedChess(OthelloStartArray,OthelloStartBoard)\n\nconst OthelloNeedKey = { player1chess:  2,\tplayer2chess:  2 }\n\nexport const OthelloInitialData = {\n\thistory: [makeGameHistoryObject(OthelloBoard,OthelloNeedKey)],\n\tgameinfo: makeGameInfoObject(\"Othello\"),\n}\n","export const PAGES = [\n\t{\n\t\tid: \"TicTacToe\",\n\t\trouter: \"/TicTacToe\",\n\t\tzh_name: \"井字棋\"\n\t},\n\t{\n\t\tid: \"TicTacToeSpecial\",\n\t\trouter: \"/TicTacToeSpecial\",\n\t\tzh_name: \"井字棋變化版\"\n\t},\t\n\t{\n\t\tid: \"Gomoku\",\n\t\trouter: \"/Gomoku\",\n\t\tzh_name: \"五子棋\"\n\t},\t\n\t{\n\t\tid: \"Othello\",\n\t\trouter: \"/Othello\",\n\t\tzh_name: \"黑白棋\"\n\t}\n]\n","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { PAGES } from \"../../data/pagesconster\";\nimport '../../stylesheets/menus.scss'\n\n\nconst selectedStyle = {\n    backgroundColor: \"white\",\n    color: \"slategray\"\n}\n\nexport const MainMenu = () => \n    <nav className=\"main-menu\">\n        <NavLink to=\"/\" >\n            [首頁]\n        </NavLink>\n        {// Use conster of Pages to map NavLink\n            PAGES.map((page,index) => {\n            return <NavLink key={index} to ={page.router} activeStyle={selectedStyle}>{`[${page.zh_name}]`}</NavLink>\n        })}\n    </nav>\n\nexport const TopMenu = ({ match , children }) =>\n<ul className=\"TopMenu\">\n    {/* NO make */ }\n</ul>\n","\nexport const GAMEDATA = {\n\tADD_GAMEDATA: \"ADD_GAMEDATA\",\n\tDEL_GAMEDATA: \"DEL_GAMEDATA\",\n\tLOADING_GAMEDATA: \"LOADING_GAMEDATA\",\n}\n\nexport const PLAYERDATA = {\n\tRE_NAME:\"RE_NAME\",\n}","import React from 'react';\n\nexport const GameLocalStore = ({store=[], deldata=f=>f, loadingdata=f=>f}) =>\n<div className=\"game-localstore\">\n\t<h2>本機存檔{/*Local Save*/}</h2>\n\t<p>這裡是本機存檔的列表</p>\n\t<p>按下時間的按鍵，就可以把存檔的記錄再從頭表演一次</p>\n\t<p>按下\"Ｘ\"按鍵，就可以把對應的存檔刪除</p>\n\t{(store.length === 0) ?\n\t\t<p>No Local Save</p> :\n\t\t<ol>\n\t\t\t{store.map((gamedata) => \n\t\t\t\t<li key={gamedata.id}>\n\t\t\t\t\t<input type=\"bottom\" value=\"X\" style={{width: 15 }}  onClick={() => deldata(gamedata.id)} />\n\t\t\t\t\t<input type=\"bottom\" value={`Time: ${gamedata.date.toLocaleString('zh-cn')} `} onClick={() => loadingdata(gamedata)} />\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</ol>\n\t}\n</div>","import React from 'react';\n\nexport const GameInFo = ({players={},history=[], info={}, adddata=f=>f ,jumpto=f=>f}) =>\n<div className=\"game-info\" >\n\t<h2>遊戲歷程{/*Game Step*/}</h2>\n\t<p>點擊按鍵，可以跳到特定的狀態。{/*there are all steps in the game , click bottom for  jumping to special state of Game*/}</p>\n\t<p>遊戲結束時，可以把記錄存在本機。{/*When game is end , you can save data to local*/}</p>\n\t<GameEndBottom gamestate={info.gamestate} adddata={() => adddata()}/>\n\t<GameStepShow history={history} players={players} list={info.actionlists} jumpto={(step) => jumpto(step)} />\n</div>\n\nconst GameEndBottom = ({gamestate=\"Game Playing\", adddata=f=>f}) =>\n(gamestate === \"Game End\") ?\n<input type=\"bottom\" value=\"Save Result\" onClick={() => adddata()} /> :\n<p></p>\n\nconst GameStepShow = ({history=[], players={} , list=[],jumpto=f=>f}) =>\n<ol>\n{\n\thistory.map((_element,step) => {\n\t\tconst libotton = step ?\n\t\t`${players[list[step - 1].owner]} Push chess to ( ${list[step - 1].rowskey + 1},${list[step - 1].columnskey + 1} )` :\n\t\t`Go to Start`\n\t\treturn (\n\t\t\t<li key={step}>\n\t\t\t<input type=\"bottom\" value={libotton} onClick={() => jumpto(step)} readOnly/>\n\t\t\t</li>\n\t\t\t)\n\t\t})\n}\n</ol>","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Square = ({ value='none', className='square', onClick}) =>\n  <button className={className} onClick={onClick}>\n        <div style={showChess(value)}></div>\n  </button>\n\nexport default Square\n\n\nSquare.propTypes = {\n  value: PropTypes.string,\n  className: PropTypes.string,\n  onClick : PropTypes.func\n}\n\nconst showChess = (value) => {\n  switch (value) {\n    case \"BlackChess\":\n      return {\n        width: \"20px\",\n        height: \"20px\",\n        borderRadius:\"10px\",\n        backgroundColor: \"Black\",\n        border: \"1px solid #4d4d4d\",\n      }\n      case \"WhiteChess\":\n        return {\n          width: \"20px\",\n          height: \"20px\",\n          borderRadius:\"10px\",\n          backgroundColor: \"white\",  \n          border: \"1px solid #4d4d4d\",\n        }\n    default:\n      return {\n        width: \"20px\",\n        height: \"20px\",\n        borderRadius:\"10px\",\n      }\n  }\n}\n\n/*\nconst selectedStyle = {\n    backgroundColor: \"white\",\n    color: \"slategray\"\n}\n*/","import React from 'react'\nimport Square from './Square'\nimport PropTypes from 'prop-types'\n\nconst Row = ({rows=[] , rowclass='board-row' , change=f=>f}) =>\n  <div className={rowclass} >\n    {rows.map((columns , columnkey ) =>\n      <Square \n        className={columns.classname}\n        value={columns.value}\n        key={columnkey}\n        onClick={() => change(columnkey)}\n      />\n      )}\n  </div>\n\nconst Board = ({ Squares=[] , boardclass='board', change=f=>f}) =>\n  <div className={boardclass}>\n    {Squares.map((rows, rowskey) =>\n      <div className=\"board-row\" key={rowskey}>\n        <Row rows={rows} key={rowskey} change={(columnkey) => change(rowskey, columnkey)} />\n      </div>\n    )}\n  </div>\n\nexport default Board\n\nBoard.propTypes = {\n  Squares: PropTypes.array,\n  className: PropTypes.string,\n  onClick : PropTypes.func\n}\n\nRow.propTypes = {\n  rows: PropTypes.array,\n  className: PropTypes.string,\n  onClick : PropTypes.func\n}\n\n\n\n","import React from 'react';\nimport Board from './Board'\n\n\nexport const GameMain = ({current={}, info= {}, players={},gamerule,mainchange=f=>f}) =>\n<div className=\"game-board\">\n\t<h1>{info.gamename}</h1>\n\t<h2>{showgamestate(info,current,players)}</h2>\n\t<Board \n\t\tSquares= {current.squares} \n\t\tclassName='board' \n\t\tchange={(rowskey, columnskey) => mainchange(rowskey, columnskey)}\n\t/>\n\t<h2>本遊戲的說明</h2>\n\t<ol>{gamerule}</ol>\n</div>\n\nconst showgamestate = (info,current,players) =>{\n\tif (info.gamestate === \"Game End\") {\n\tif (info.winner !== \"No Winner\") {\n\t\treturn `Winner is ${players[info.winner]}, Loser is ${players[info.loser]}`\n\t}\n\telse {\n\t\treturn `The Ｇame ended in a tie.`\n\t}\n}\nelse {\n\treturn `${players[current.nowplayer]} ,  Please push your Chess`\n}}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { GameLocalStore } from \"./Gamelocalstore\";\nimport { GameInFo } from \"./Gameinfo\";\nimport { GameMain } from \"./GameMain\";\nimport '../../stylesheets/page.css'\n\n\nexport \tclass  GamePage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state =  this.props.initialstate\n\t\tthis.mainchange = this.mainchange.bind(this)\n\t\tthis.loadingdata = this.loadingdata.bind(this)\n\t\tthis.adddata = this.props.adddata\n\t\tthis.deldata = this.props.deldata\t\t\n\t}\n\tmainchange = () => {\n\t\t// Need compoent to make \n\t\tconsole.log(\"Sorry, you did not make the method\")\n\t}\n\tjumpto = (step) => {\n\t\tif (step === 0) {\n\t\t\tthis.setState(this.props.initialstate)\n\t\t}\n\t\tthis.setState({\n\t\t\thistory: this.state.history.slice(0,step + 1),\n\t\t\tgameinfo: {\n\t\t\t\t...this.state.gameinfo,\n\t\t\t\tturns: step,\n\t\t\t\tactionlists: this.state.gameinfo.actionlists.slice(0, step),\n\t\t\t\tgamestate: \"Game Playing\"\n\t\t\t}}\n\t\t\t)\n\t\t}\n\t// \n\tloadingdata = (gamedata) => {\n\t\twindow.setTimeout(( () => this.jumpto(0) ), 0)\n\t\tgamedata.chesshistory.reduce((_previousValue,action,index) => window.setTimeout(( () => this.mainchange(action.rowskey, action.columnskey) ), 1000 * index + 1000), 0)\n\t}\n\trender() {\n\t\tconst { history, gameinfo: info} = this.state\n//\t\tconst info = this.state.gameinfo\n\t\tconst {players, gamerule} = this.props\n\t\tconst current = history[info.turns]\n\t\t\treturn (\n\t\t\t\t<section className=\"game\" >\n\t\t\t\t\t<GameMain\n\t\t\t\t\t\tcurrent={current}\n\t\t\t\t\t\tinfo= {info} \n\t\t\t\t\t\tplayers={players} \n\t\t\t\t\t\tgamerule={gamerule} \n\t\t\t\t\t\tmainchange={(rowskey, columnskey) => this.mainchange(rowskey, columnskey)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<GameInFo \n\t\t\t\t\t\tplayers={players} \n\t\t\t\t\t\thistory={history} \n\t\t\t\t\t\tinfo={info} \n\t\t\t\t\t\tadddata={()=>this.adddata(info.gamename,info.actionlists)} \n\t\t\t\t\t\tjumpto={(step) => this.jumpto(step)}\n\t\t\t\t\t/>\n\t\t\t\t\t<GameLocalStore\n\t\t\t\t\t\tstore={this.props.localstore}\n\t\t\t\t\t\tdeldata={(id) => this.deldata(id)}\n\t\t\t\t\t\tloadingdata= {(gamedata) => this.loadingdata(gamedata)}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\t\n// ========================================\n\n\n\nGamePage.propTypes = {\n  squares: PropTypes.array,\n  list: PropTypes.array,\n  info: PropTypes.object,\n  addlist: PropTypes.func,\n  dellist: PropTypes.func,\n  addchess: PropTypes.func,\n  changeplayer: PropTypes.func,\n  endgame: PropTypes.func,\n  begingame: PropTypes.func,\n  beginboard: PropTypes.func,\n  clearlist: PropTypes.func\n}","// set chess to a square\nexport const setChessToSquares = (chess, squares) => {\n\tsquares[chess.rowskey][chess.columnskey] = {value: chess.value, owner: chess.owner, lock: chess.lock}\n\treturn squares\n}\n// add chess to list\nexport const addChessToLists = (chess={}, lists=[]) => lists.concat([chess])\n//take one square form Squares ex:TakeSquare(1,1)(nowsquares)\nexport const TakeSquare = (rowskey, columnkey) => Squares  => Squares[rowskey][columnkey]\n//check squre's lock ex:Checklock(nowsquare)\nexport const CheckSquareLock = (Square) => Square.lock\n//check square exist\nexport const CheckSquareExist = (rowslength,columnslength)  => (rowskey, columnskey) => rowskey >= 0 && rowskey < rowslength && columnskey >= 0 && columnskey < columnslength\n//check squre's value\nexport const CheckSquareValue = Value => Square => {\n\treturn(Square.value  === Value) ? 1 : 0\n}\n// copy squares\nexport const SquaresDeepCopy = (Squares) => Squares.map((rows) => rows.map((columns) => Object.assign({}, columns)))\n","import  {CheckSquareValue, setChessToSquares, addChessToLists} from './gamebasics'\n\n//find max length for connect chesses by specil vextor\nexport const FindLength = (VectorX, VectorY) => connectlength => (CurrentPoint , NowSquares) => {\n    let contilen = 1\n    let CheckValue = CheckSquareValue(CurrentPoint.value)\n    let lengthx = NowSquares.length\n    for (let i = 1 ; i < connectlength ; i++) {\n        let tapointx = CurrentPoint.rowskey - i * VectorX\n        let tapointy = CurrentPoint.columnskey - i * VectorY\n        if ( tapointx >= 0 && tapointx < lengthx && tapointy >= 0 && tapointy < NowSquares[tapointx].length){\n            contilen += CheckValue(NowSquares[tapointx][tapointy])\n        }\n        else{\n            break\n        }\n    }\n    for (let j = 1 ; j< connectlength ; j ++) {\n        let tapointx = CurrentPoint.rowskey + j * VectorX\n        let tapointy =  CurrentPoint.columnskey + j * VectorY\n        if ( tapointx >= 0 && tapointx < lengthx && tapointy >= 0 && tapointy < NowSquares[tapointx].length){\n            contilen += CheckValue(NowSquares[tapointx][tapointy])\n        }\n        else{\n            break\n        }\n    }\n    return contilen\n}\n//find maxlength for row,Column ,Slash or BackSlash by Currying\nexport const Rowlength = FindLength(1,0) \nexport const Columnlength = FindLength(0,1)\nexport const Slashlength = FindLength(1,1)\nexport const BackSlashlength = FindLength(1,-1)\n//judge length exist\nexport const JudgeWinner = length => (CurrentPoint , Squares) =>\n{\n    return  Rowlength(length)(CurrentPoint,Squares) >= length || \n    Columnlength(length)(CurrentPoint,Squares) >= length ||\n    Slashlength(length)(CurrentPoint,Squares) >= length  ||\n    BackSlashlength(length)(CurrentPoint,Squares) >= length \n}\n// ============\n\n// remove the most old chess \nexport const removeOldChess = (ProcessObject = {}) => {\n    let squares = ProcessObject.squares\n    let lists = ProcessObject.lists\n    if (lists.length >= 6) {\n        let oldchess = {\n            rowskey: lists[0].rowskey,\n            columnskey: lists[0].columnskey,\n            value: \"\",\n            owner: \"\",\n            lock: false,\n        }\n        lists = lists.filter((_chess,index) => index !== 0)\n        squares = setChessToSquares(oldchess,squares)\n    }\n    ProcessObject.squares = squares\n    ProcessObject.lists = lists\n    return ProcessObject\n}\nexport const addNewChess = (ProcessObject = {}) => {\n    let chess = ProcessObject.chess\n//    console.log(chess)\n    ProcessObject.lists = addChessToLists(chess,ProcessObject.lists)\n\tProcessObject.actionlists = addChessToLists(chess,ProcessObject.actionlists)\n    ProcessObject.squares = setChessToSquares(chess,ProcessObject.squares)\n    return ProcessObject\n}\n\nexport const ConeectJudge = (length) => (ProcessObject = {}) => {\n    ProcessObject.gamestate =  (JudgeWinner(length)(ProcessObject.chess,ProcessObject.squares)) ? \"Game End\" : \"Game Playing\"\n    return ProcessObject\n}","import { compose } from 'redux';\nimport { GamePage } from \"../ui/page\";\nimport { SquaresDeepCopy } from \"../../functions/gamebasics\";\nimport { addNewChess, removeOldChess, ConeectJudge } from '../../functions/connectgame'\n\nexport class TioTeoTicSpecialForm extends GamePage {\n\tmainchange = (rowskey, columnskey) => {\n\t\tconst history = this.state.history.slice(0, this.state.gameinfo.turns + 1);\n    const current = history[history.length - 1];\n\t\tconst player = current.nowplayer\n\t\tconst info = this.state.gameinfo\n\t\tlet newsquares = SquaresDeepCopy(current.squares);\n\t\t// check broad is lock\n    if (newsquares[rowskey][columnskey].lock === true || info.gamestate === \"Game End\")\n\t\t\treturn\n\t\t// construct new chess\n\t\tconst  newchess = {\n\t\t\trowskey: rowskey,\n      columnskey: columnskey,\n      value: (player === \"player1\") ? \"BlackChess\" : \"WhiteChess\",\n\t\t\towner: player,\n\t\t\tlock: true,\n\t\t}\n\t\t// use compose function( from redux,js) to processing state, and get new state\n\t\tlet processobject = compose(\n\t\t\tConeectJudge(3),\n\t\t\taddNewChess,\n\t\t\tremoveOldChess\n\t)({\n\t\tsquares: newsquares,\n\t\tlists: current.showlists.slice(),\n\t\tactionlists: info.actionlists.slice(),\n\t\tchess: newchess,\n\t\tgamestate: info.gamestate,\n\t})\n\t\t// set state\n\t\tlet winner = \"\"\n\t\tlet loser = \"\"\n\tif (processobject.gamestate === \"Game End\") {\n\t\t\twinner = player\n\t\t\tloser = (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t}\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: processobject.squares,\n\t\t\t\t\tshowlists: processobject.lists,\n\t\t\t\t\tnowplayer: (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t\t\t}]),\n\t\t\tgameinfo: {\n\t\t\t\t...info,\n\t\t\t\tactionlists: processobject.actionlists,\n\t\t\t\tturns: info.turns + 1,\n\t\t\t\tgamestate: processobject.gamestate,\n\t\t\t\twinner: winner,\n\t\t\t\tloser: loser,\n\t\t\t},\n\t\t\t})\n  }\n}\n\n// ========================================\n\nexport class TioTeoTicForm extends GamePage {\n\tmainchange = (rowskey, columnskey) => {\n\t\tconst history = this.state.history.slice(0, this.state.gameinfo.turns + 1);\n    const current = history[history.length - 1];\n\t\tconst player = current.nowplayer\n\t\tconst info = this.state.gameinfo\n\t\tlet newsquares = SquaresDeepCopy(current.squares);\n\t\t// check broad is lock\n    if (newsquares[rowskey][columnskey].lock === true || info.gamestate === \"Game End\")\n\t\t\treturn\n\t\t// construct new chess\n\t\tconst  newchess = {\n\t\t\trowskey: rowskey,\n      columnskey: columnskey,\n      value: (player === \"player1\") ? \"BlackChess\" : \"WhiteChess\",\n\t\t\towner: player,\n\t\t\tlock: true,\n\t\t}\n\t\t// use compose function( from redux,js) to processing state, and get new state\n\t\tlet processobject = compose(\n\t\t\tConeectJudge(3),\n\t\t\taddNewChess\n\t)({\n\t\tsquares: newsquares,\n\t\tlists: current.showlists.slice(),\n\t\tactionlists: info.actionlists.slice(),\n\t\tchess: newchess,\n\t\tgamestate: info.gamestate,\n\t})\n\t\t// set state\n\t\tlet winner = \"\"\n\t\tlet loser = \"\"\n\tif (processobject.gamestate === \"Game End\") {\n\t\t\twinner = player\n\t\t\tloser = (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t}\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: processobject.squares,\n\t\t\t\t\tshowlists: processobject.lists,\n\t\t\t\t\tnowplayer: (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t\t\t}]),\n\t\t\tgameinfo: {\n\t\t\t\t...info,\n\t\t\t\tactionlists: processobject.actionlists,\n\t\t\t\tturns: info.turns + 1,\n\t\t\t\tgamestate: processobject.gamestate,\n\t\t\t\twinner: winner,\n\t\t\t\tloser: loser,\n\t\t\t},\n\t\t\t})\n  }\n}\n\nexport class GomokuForm extends GamePage {\n\tmainchange = (rowskey, columnskey) => {\n\t\tconst history = this.state.history.slice(0, this.state.gameinfo.turns + 1);\n    const current = history[history.length - 1];\n\t\tconst player = current.nowplayer\n\t\tconst info = this.state.gameinfo\n\t\tlet newsquares = SquaresDeepCopy(current.squares);\n\t\t// check broad is lock\n    if (newsquares[rowskey][columnskey].lock === true || info.gamestate === \"Game End\")\n\t\t\treturn\n\t\t// construct new chess\n\t\tconst  newchess = {\n\t\t\trowskey: rowskey,\n      columnskey: columnskey,\n      value: (player === \"player1\") ? \"BlackChess\" : \"WhiteChess\",\n\t\t\towner: player,\n\t\t\tlock: true,\n\t\t}\n\t\t// use compose function( from redux,js) to processing state, and get new state\n\t\tlet processobject = compose(\n\t\t\tConeectJudge(5),\n\t\t\taddNewChess\n\t)({\n\t\tsquares: newsquares,\n\t\tlists: current.showlists.slice(),\n\t\tactionlists: info.actionlists.slice(),\n\t\tchess: newchess,\n\t\tgamestate: info.gamestate,\n\t})\n\t\t// set state\n\t\tlet winner = \"\"\n\t\tlet loser = \"\"\n\tif (processobject.gamestate === \"Game End\") {\n\t\t\twinner = player\n\t\t\tloser = (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t}\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: processobject.squares,\n\t\t\t\t\tshowlists: processobject.lists,\n\t\t\t\t\tnowplayer: (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t\t\t}]),\n\t\t\tgameinfo: {\n\t\t\t\t...info,\n\t\t\t\tactionlists: processobject.actionlists,\n\t\t\t\tturns: info.turns + 1,\n\t\t\t\tgamestate: processobject.gamestate,\n\t\t\t\twinner: winner,\n\t\t\t\tloser: loser,\n\t\t\t},\n\t\t\t})\n  }\n}\n\n","\nexport const calculationArrays = (chess ={}, squares = []) => \nArray(9).fill(1).map((_k,i) => [Math.floor( i / 3) - 1 ,(i % 3) - 1])\n.map( vec => takeLineChessFromSquares(vec)(8,1)(chess,squares))\n.map(chessArray => getCatchedChessFormArray(chessArray,chess,[]))\n\n// take Array of chess from Square\nexport const takeLineChessFromSquares = (Vector = []) => (maxlength = 1 , interval = 1) => (CurrentPoint , NowSquares,resultarray = []) => {\n\t//if maxlength <= 0 ,return result\n\tif (maxlength <= 0)\n\t\treturn resultarray\n\t// set new point\n\tlet [chessx,chessy] = [CurrentPoint.rowskey + Vector[0] * interval,CurrentPoint.columnskey + Vector[1] * interval]\n\t// if new point exist, return function with maxlength - 1 \n\tif ( chessx >= 0 && chessx < NowSquares.length && chessy >= 0 && chessy < NowSquares[chessx].length)\n\treturn takeLineChessFromSquares(Vector)( maxlength - 1 , interval)(CurrentPoint , NowSquares,resultarray.concat({\n\t\t...NowSquares[chessx][chessy], rowskey: chessx, columnskey: chessy\n\t}))\n\t// else return result\n\telse \n\t\treturn resultarray\n}\n\n//find result of catch-game from Array of chess\nconst getCatchedChessFormArray = (checkarray,startchess,resultarray = []) => {\n\tif ( checkarray.length === 0) {  // No square need check , return empty result\n\t\treturn []\n\t}\n\tlet [oldchess, ...otherchess] = checkarray\n\tif (oldchess.value === startchess.value ) {  // find same chess , return result\n\t\treturn resultarray\n\t}\n\telse if (oldchess.value === \"\" ) { //find empty chess , return empty result\n\t\treturn []\n\t}\n\telse if (oldchess.value !==  startchess.value  ) { //No find same chess. continus find\n\t\treturn getCatchedChessFormArray(otherchess,startchess,resultarray.concat({...startchess, rowskey: oldchess.rowskey, columnskey: oldchess.columnskey}))\n\t}\n}\n\n","import { compose } from 'redux';\n import { GamePage } from \"../ui/page\";\nimport { SquaresDeepCopy ,  addChessToLists, setChessToSquares} from \"../../functions/gamebasics\";\nimport { calculationArrays } from \"../../functions/catchgame\";\n\nexport class OthelloForm extends GamePage {\n\tmainchange = (rowskey, columnskey) => {\n\t\tconst history = this.state.history.slice(0, this.state.gameinfo.turns + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst player = current.nowplayer\n\t\tconst info = this.state.gameinfo\n\t\tlet newsquares = SquaresDeepCopy(current.squares);\n\t\t// check broad is lock\n    if (newsquares[rowskey][columnskey].lock === true || info.gamestate === \"Game End\")\n\t\t\treturn\n\t\t// construct new chess\n\t\tconst  newchess = {\n\t\t\trowskey: rowskey,\n      columnskey: columnskey,\n      value: (player === \"player1\") ? \"BlackChess\" : \"WhiteChess\",\n\t\t\towner: player,\n\t\t\tlock: true,\n\t\t}\n\t\t// use compose function( from redux,js) to processing state, and get new state\n\t\tlet processobject = compose(\n\t\t\tJudgeGame,\n\t\t\torganizeBoard,\n\t\t\taddNewChess,\n\t)({\n\t\tsquares: newsquares,\n\t\tplayer1chess: current.player1chess,\n\t\tplayer2chess: current.player2chess,\n\t\tactionlists: info.actionlists.slice(),\n\t\tchess: newchess,\n\t\tgamestate: info.gamestate,\n\t})\n\t\t// set state\n\t\tlet winner = \"\"\n\t\tlet loser = \"\"\n\t\tif (processobject.gamestate === \"Game End\") {\n\t\t\tif (processobject.player1chess > processobject.player2chess) {\n\t\t\t\twinner = \"player1\"\n\t\t\t\tloser = \"player2\"\n\t\t\t}\n\t\t\telse if (processobject.player2chess > processobject.player1chess) {\n\t\t\t\twinner = \"player2\"\n\t\t\t\tloser = \"player1\"\n\t\t\t}\n\t\t\telse {\n\t\t\t\twinner = \"No Winner\"\n\t\t\t\tloser = \"No Loser\"\n\t\t\t}}\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: processobject.squares,\n\t\t\t\t\tplayer1chess:  processobject.player1chess,\n\t\t\t\t\tplayer2chess:  processobject.player2chess,\t\n\t\t\t\t\tnowplayer: (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t\t\t}]),\n\t\t\tgameinfo: {\n\t\t\t\t...info,\n\t\t\t\tactionlists: processobject.actionlists,\n\t\t\t\tturns: info.turns + 1,\n\t\t\t\tgamestate: processobject.gamestate,\n\t\t\t\twinner: winner,\n\t\t\t\tloser: loser,\n\t\t\t},\n\t\t})\n}\n}\n\n//--------------------------------------\n\nconst addNewChess = (ProcessObject = {}) => {\n\tlet chess = ProcessObject.chess\n\tProcessObject.actionlists = addChessToLists(chess,ProcessObject.actionlists)\n\tProcessObject.squares = setChessToSquares(chess,ProcessObject.squares)\n\treturn ProcessObject\n}\nconst organizeBoard = (ProcessObject = {}) => {\n\tlet chess = ProcessObject.chess\n\tlet squares = ProcessObject.squares\n\tlet player = chess.owner\n\t//caculate the array to change chess\tand flatten 2-dimension-array to 1-dimension-array\n\tlet changeArrays = calculationArrays(chess, squares).reduce((accumulator,currentValue)=> accumulator.concat(currentValue),[])\n\tlet changenumber = changeArrays.length\n\t//change chess by array\n\tif (changenumber > 0){\n\t\tProcessObject.squares = changeArrays.reduce((presquares,nowchess) => setChessToSquares(nowchess,presquares),squares)\n\t}\n\t//re-caculate the number of player's chess\n\tif (player === \"player1\") {\n\t\tProcessObject.player1chess += changenumber + 1\n\t\tProcessObject.player2chess -= changenumber\n\t}\n\telse {\n\t\tProcessObject.player1chess -= changenumber\n\t\tProcessObject.player2chess += changenumber + 1\n\t}\n\treturn ProcessObject\n}\n\nconst JudgeGame = (ProcessObject = {}) => {\n\tlet player1chess = ProcessObject.player1chess\n\tlet player2chess = ProcessObject.player2chess\n\tif ( (player1chess === 0) || (player2chess === 0) || (player1chess + player2chess >= 64) ) {\n\t\tProcessObject.gamestate = \"Game End\"\n\t}\n\telse {\n\t\tProcessObject.gamestate = \"Game Playing\"\n\t}\n\treturn ProcessObject\n}","import React from 'react'\nimport fetch from 'isomorphic-fetch';\n\nexport \tclass  HomeForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.movegamedata = this.props.movegamedata.bind(this) \n\t\tthis.moveplayerdata = this.props.moveplayerdata.bind(this)\n\t\tthis.playerdata = this.props.playerdata\n\t\tthis.clear = this.clear.bind(this)\n\t\tthis.loadingonlinedata = this.loadingonlinedata.bind(this)\n\t\tthis.processdata = this.processdata.bind(this)\n\t}\n\tloadingonlinedata(url) {\n\t\tfetch(url)\n\t\t.then(response => response.json())\n\t\t.then(onlinedata => this.processdata(onlinedata))\n\t}\n\tprocessdata(data) {\n\t\tthis.movegamedata(data.playerdata.player1,data.playerdata.player2)\n\t\tthis.moveplayerdata(data.gameDatas)\n\t}\n\tclear() {\n\t\tthis.movegamedata([])\n\t\tthis.moveplayerdata(\"Tom\",\"Jerry\")\n\t}\n\trender() {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>遊戲玩家</h1>\n\t\t\t\t\t\t<div>{`遊戲玩家１：${this.props.playerdata.player1}`}</div>\n\t\t\t\t\t\t<div>{`遊戲玩家２：${this.props.playerdata.player2}`}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>讀取伺服器記錄，但是還沒架設伺服器就是了</h1>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<input type=\"buttom\" value=\"回復初始\" onClick={() => this.clear()} />\t\t\t\t\t\t\n\t\t\t\t\t\t<input type=\"buttom\" value=\"讀取存檔１\" onClick={() => this.loadingonlinedata(\"url1\")} />\n\t\t\t\t\t\t<input type=\"buttom\" value=\"讀取存檔２\" onClick={() => this.loadingonlinedata(\"url2\")} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p>如果沒有載入預設的遊戲玩家的名稱，請先按一下“回復初始”按鍵來強制載入遊戲玩家的名稱</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}","import {connect } from 'react-redux';\nimport { AddGameData, DelGameData, LoadingGameDada } from \"../../redux/actions/GameDataAction\";\nimport { ChangePlayerName } from \"../../redux/actions/PlayerDataAction\";\nimport { TioTeoTicForm, TioTeoTicSpecialForm, GomokuForm } from \"./TioTeoTic\";\nimport { OthelloForm } from \"./othello\";\nimport { HomeForm } from \"./home\";\n\n\n//Incoming store with special game-name\nconst mapStateToProps = gamename => state => ({\n\tlocalstore: (state.gameDatas.length !== 0) ?\n\tstate.gameDatas.filter((gamedata) => gamedata.gamename === gamename) :\n\t[],\n\tplayers: state.playerData\n})\n\n// coonect dispatch and method\nconst mapDispatchToProps = dispatch => ({\n\tdeldata(id) {\n\t\tdispatch(DelGameData(id))\n\t},\n\tadddata(gamename,actionlists) {\n\t\tdispatch(AddGameData(gamename,actionlists))\n\t}\n})\n\n//HOC for connect Ui-component , game-name, state and dispatch\nconst HOCforconnect = (component, gamename) => {\n\treturn connect(\n\t\tmapStateToProps(gamename),\n\t\tmapDispatchToProps\n\t\t)(component)\n}\n\nexport const TioTeoTicSpecialGame = HOCforconnect(TioTeoTicSpecialForm, \"TioTeoTicSpecial\")\nexport const TioTeoTicGame = HOCforconnect(TioTeoTicForm, \"TioTeoTic\")\nexport const GomokuGame = HOCforconnect(GomokuForm, \"Gomoku\")\nexport const OthelloGame = HOCforconnect(OthelloForm,\"Othello\")\n\nexport const HomePage = connect(\n\tstate => ({\n\t\tplayerdata: state.playerData\n\t}),\n\tdispatch => ({\n\t\tmoveplayerdata(player1,player2) {\n\t\t\tdispatch(ChangePlayerName(player1,player2))\n\t\t},\n\t\tmovegamedata(data) {\n\t\t\tdispatch(LoadingGameDada(data))\n\t\t}\n\t})\n\t)(HomeForm)\n","import { GAMEDATA } from \"../constants\";\nimport { v4 } from 'uuid';\n\nexport const AddGameData = (gamename,chesshistory) => ({\n\ttype: GAMEDATA.ADD_GAMEDATA,\n\tid: v4(),\n\tgamename,\n\tdate: new Date(),\n\tchesshistory,\n})\n\nexport const DelGameData = (id) => ({\n\ttype: GAMEDATA.DEL_GAMEDATA,\n\tid,\n})\n\nexport const LoadingGameDada = (gameDatas) => ({\n\ttype: GAMEDATA.LOADING_GAMEDATA,\n\tgameDatas,\n})","import { PLAYERDATA } from \"../constants\";\n\nexport const ChangePlayerName = (player1,player2) => ({\n\ttype: PLAYERDATA.RE_NAME,\n\tplayer1,\n\tplayer2,\n})\n","import React from 'react'\n\nexport const PAGES = [\n\t{\n\t\tid: \"TicTacToe\",\n\t\trouter: \"/TicTacToe\",\n\t\tzh_name: \"井字棋\"\n\t},\n\t{\n\t\tid: \"TicTacToeSpecial\",\n\t\trouter: \"/TicTacToeSpecial\",\n\t\tzh_name: \"井字棋變化版\"\n\t},\t\n\t{\n\t\tid: \"Othello\",\n\t\trouter: \"/Othello\",\n\t\tzh_name: \"黑白棋\"\n\t}\n]\nexport const TicTacToeRule =  \n\t<React.Fragment>\n\t\t<li>雙方輪流放子</li>\n\t\t<li>先連成一線者得勝</li>\n\t</React.Fragment>\n\n\texport const TicTacToeSpecialRule = \n\t<React.Fragment>\n\t\t<li>是井字棋的變化版</li>\n\t\t<li>雙方輪流放子</li>\n\t\t<li>先連成一線者得勝</li>\n\t\t<li>當現在盤面上有六顆棋子時。在第七個棋子落下前，會先移出最早放的棋子，再放下第七顆</li>\n\t</React.Fragment>\n\n\texport const GomokuRule = \n\t<React.Fragment>\n\t\t<li>是五子棋的”極簡化版“</li>\n\t\t<li>雙方輪流放子</li>\n\t\t<li>先連成一線者得勝</li>\n\t\t<li>之後也許會把棋盤換成圍棋用棋盤</li>\n\t\t<li>還沒有設定連珠規則或RIF規則，之後會補上功能</li>\n\t</React.Fragment>\n\n\n\texport const OthelloRule = \n\t<React.Fragment>\n\t\t<li>是奧賽羅棋的”極簡化版“</li>\n\t\t<li>雙方輪流放子</li>\n\t\t<li>當棋盤上都放滿棋子時，棋子多的玩家得勝</li>\n\t\t<li>還沒有限制下棋子的地方，之後會補上功能</li>\n\t</React.Fragment>\n","import React from 'react';\nimport { MainMenu } from './MainMenu'\nimport '../../stylesheets/pages.scss'\nimport { OthelloGame, TioTeoTicGame, TioTeoTicSpecialGame, GomokuGame,HomePage } from \"../contain/contain\";\nimport { OthelloInitialData, TicTacToeInitialData ,GomokuInitialData ,TicTacToeSpecialInitialData} from \"./initialstatedata\";\nimport { OthelloRule, TicTacToeRule, TicTacToeSpecialRule, GomokuRule } from \"../../data/gamerule\";\n\nconst PageTemplate = ({children}) =>\n    <div className=\"page\">\n        <MainMenu />\n        {children}\n    </div>\n\nexport const Home = () =>\n<PageTemplate>\n    <HomePage />\n</PageTemplate>\n\n\n    export const TicTacToe = () =>\n    <PageTemplate>\n            <TioTeoTicGame initialstate = {TicTacToeInitialData} gamerule={TicTacToeRule} />\n    </PageTemplate>\n\n    export const TicTacToeSpecial = () =>\n    <PageTemplate>\n            <TioTeoTicSpecialGame initialstate = {TicTacToeSpecialInitialData} gamerule={TicTacToeSpecialRule} />\n    </PageTemplate>\n\n    export const Gomoku = () =>\n    <PageTemplate>\n            <GomokuGame initialstate = {GomokuInitialData} gamerule={GomokuRule} />\n    </PageTemplate>\n\n    \nexport const Othello = () =>\n    <PageTemplate>\n        <OthelloGame initialstate = {OthelloInitialData} gamerule={OthelloRule} />\n    </PageTemplate>\n\nexport const Whoops404 = ({ location }) =>\n    <div className=\"Whoops-404\">\n        <hi>找不到以'{location.pathname}'為名稱的分頁</hi>\n    </div>","import { PLAYERDATA } from \"../constants\"\n\nexport const playerData = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase PLAYERDATA.RE_NAME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayer1: action.player1,\n\t\t\t\tplayer2: action.player2,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import { GAMEDATA } from \"../constants\";\n\nexport const gameData = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase GAMEDATA.ADD_GAMEDATA:\n\t\t\treturn [{\n\t\t\t\tid: action.id,\n\t\t\t\tgamename: action.gamename,\n\t\t\t\tdate: action.date,\n\t\t\t\tchesshistory: action.chesshistory,\n\t\t\t}]\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const gameDatas = (state = [] , action) => {\n\tswitch (action.type) {\n\t\tcase GAMEDATA.ADD_GAMEDATA:\n\t\t\treturn state.concat(gameData([],action))\n\t\tcase GAMEDATA.DEL_GAMEDATA:\n\t\t\treturn state.filter((data) => data.id !== action.id)\n\t\tcase GAMEDATA.LOADING_GAMEDATA:\n\t\t\treturn action.gameDatas\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport {playerData  } from \"./reducers/PlayerDataReducers\";\nimport { gameDatas } from \"./reducers/GameDataReducer\";\n\nconst initialDate ={\n\tgameDatas:[],\n\tplayerData:{\n\t\tplayer1: \"Tom1\",\n\t\tplayer2: \"Jerry1\",\n\t},\n}\n\nconst logger = store => next => action => {\n\tlet result\n\t//console.groupCollapsed(\"dispatching\", action.type)\n\t//console.log('prev state' , store.getState())\n\t//console.log('action', action)\n\tresult = next(action)\n\t//console.log('next state', store.getState())\n\t//console.groupEnd()\n\treturn result\n}\n\nconst saver = store => next => action => {\n\tlet result = next(action)\n\tlocalStorage['redux-store'] = JSON.stringify(store.getState())\n\treturn result\n}\n\nexport const storeFactory = (initialState = initialDate ) =>(\n\tapplyMiddleware(logger, saver)(createStore)(\n\t\tcombineReducers({gameDatas, playerData}) ,\n\t\t(localStorage['redux-store']) ?\n\t\tJSON.parse(localStorage['redux-store']) :\n\t\tinitialState\n\t)\n)\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux';\nimport {\n  HashRouter,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport * as Pages from './components/menu/pages'\nimport { PAGES } from \"./data/pagesconster\";\nimport { storeFactory } from \"./redux/Store\";\n\nwindow.React = React\n\nconst initialDate ={\n\tgameDatas:[],\n\tplayerData:{\n\t\tplayer1: \"Tom\",\n\t\tplayer2: \"Jerry\",\n\t},\n}\n\n\nconst store = storeFactory(initialDate)\n\nrender(\n  <Provider store={store} >\n  <HashRouter>\n  <div className=\"main\" >\n  <Switch>\n  <Route exact path=\"/\" component={Pages[\"Home\"]} />\n  {// Use conster of Pages to map Route\n    PAGES.map((page,index) => {\n    return <Route key={index} path={page.router} component={Pages[page.id]} />\n  })}\n  <Route component={Pages.Whoops404} />\n  </Switch>\n  </div>\n  </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}