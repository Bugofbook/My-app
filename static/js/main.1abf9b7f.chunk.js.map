{"version":3,"sources":["data/pagesconster.js","components/menu/MainMenu.js","redux/constants.js","components/ui/Square.js","components/ui/Board.js","components/ui/page.js","functions/gamebasics.js","functions/connectgame.js","components/contain/TioTeoTic.js","components/contain/othello.js","functions/catchgame.js","components/contain/home.js","components/contain/contain.js","redux/actions/GameDataAction.js","redux/actions/PlayerDataAction.js","components/menu/initialstatedata.js","data/gamerule.js","components/menu/pages.js","redux/reducers/PlayerDataReducers.js","redux/reducers/GameDataReducer.js","redux/Store.js","index.js"],"names":["PAGES","id","router","zh_name","selectedStyle","backgroundColor","color","MainMenu","react_default","a","createElement","className","NavLink","to","map","page","index","key","activeStyle","concat","GAMEDATA","PLAYERDATA","Square","_ref","_ref$value","value","_ref$className","onClick","style","showChess","width","height","borderRadius","border","Row","_ref$rows","rows","_ref$rowclass","rowclass","_ref$change","change","f","columns","columnkey","ui_Square","classname","Board","_ref2","_ref2$Squares","Squares","_ref2$boardclass","boardclass","_ref2$change","rowskey","Board_Row","GamePage","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","mainchange","console","log","jumpto","step","setState","initialstate","history","state","slice","gameinfo","objectSpread","turns","actionlists","gamestate","loadingdata","gamedata","window","setTimeout","chesshistory","reduce","_previousValue","action","columnskey","bind","assertThisInitialized","adddata","deldata","inherits","createClass","store","_this2","info","current","localstore","players","steps","_element","libotton","owner","type","readOnly","gamename","winner","loser","nowplayer","showgamestate","ui_Board","squares","gamerule","showsavebottom","length","date","toLocaleString","React","Component","setChessToSquares","chess","lock","addChessToLists","arguments","undefined","SquaresDeepCopy","CopySquares","i","ilen","Nowrows","j","jlen","assign","FindLength","VectorX","VectorY","connectlength","CurrentPoint","NowSquares","Value","contilen","CheckValue","lengthx","tapointx","tapointy","Rowlength","Columnlength","Slashlength","BackSlashlength","removeOldChess","ProcessObject","lists","oldchess","filter","_chess","addNewChess","TTTSJudge","TioTeoTicSpecialForm","_GamePage","_getPrototypeOf2","_len","args","Array","_key","apply","player","newsquares","newchess","processobject","compose","showlists","TioTeoTicForm","_GamePage2","_getPrototypeOf3","_len2","_key2","OthelloForm","JudgeGame","organizeBoard","player1chess","player2chess","changeArrays","resultArray","targetvalue","vec","Math","floor","jth","tavalue","calculationArrays","accumulator","currentValue","changenumber","presquares","nowchess","HomeForm","movegamedata","moveplayerdata","playerdata","clear","loadingonlinedata","processdata","url","fetch","then","response","json","onlinedata","data","player1","player2","gameDatas","_this3","mapDispatchToProps","dispatch","DelGameData","v4","Date","AddGameData","HOCforconnect","component","connect","playerData","mapStateToProps","TioTeoTicSpecialGame","TioTeoTicGame","GomokuGame","OthelloGame","HomePage","ChangePlayerName","makeEmptyBoard","row","column","fill","makeGameHistoryObject","board","objecta","makeGameInfoObject","TicTacToeBoard","TicTacToeNeedKey","TicTacToeInitialData","TicTacToeSpecialInitialData","GomokuInitialData","OthelloStartBoard","OthelloInitialData","TicTacToeRule","react","Fragment","TicTacToeSpecialRule","GomokuRule","OthelloRule","PageTemplate","children","MainMenu_MainMenu","Home","pages_PageTemplate","TicTacToe","TicTacToeSpecial","Gomoku","Othello","Whoops404","location","pathname","gameData","initialDate","logger","next","saver","result","localStorage","JSON","stringify","getState","initialState","applyMiddleware","createStore","combineReducers","parse","storeFactory","render","es","HashRouter","Switch","Route","exact","path","Pages","document","getElementById"],"mappings":"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","file":"static/js/main.1abf9b7f.chunk.js","sourcesContent":["export const PAGES = [\n\t{\n\t\tid: \"TicTacToe\",\n\t\trouter: \"/TicTacToe\",\n\t\tzh_name: \"井字棋\"\n\t},\n\t{\n\t\tid: \"TicTacToeSpecial\",\n\t\trouter: \"/TicTacToeSpecial\",\n\t\tzh_name: \"井字棋變化版\"\n\t},\t\n\t{\n\t\tid: \"Gomoku\",\n\t\trouter: \"/Gomoku\",\n\t\tzh_name: \"五子棋\"\n\t},\t\n\t{\n\t\tid: \"Othello\",\n\t\trouter: \"/Othello\",\n\t\tzh_name: \"黑白棋\"\n\t}\n]\n","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { PAGES } from \"../../data/pagesconster\";\nimport '../../stylesheets/menus.scss'\n\n\nconst selectedStyle = {\n    backgroundColor: \"white\",\n    color: \"slategray\"\n}\n\nexport const MainMenu = () => \n    <nav className=\"main-menu\">\n        <NavLink to=\"/\" >\n            [首頁]\n        </NavLink>\n        {// Use conster of Pages to map NavLink\n            PAGES.map((page,index) => {\n            return <NavLink key={index} to ={page.router} activeStyle={selectedStyle}>{`[${page.zh_name}]`}</NavLink>\n        })}\n    </nav>\n\nexport const TopMenu = ({ match , children }) =>\n<ul className=\"TopMenu\">\n    {/* NO make */ }\n</ul>\n","\nexport const GAMEDATA = {\n\tADD_GAMEDATA: \"ADD_GAMEDATA\",\n\tDEL_GAMEDATA: \"DEL_GAMEDATA\",\n\tLOADING_GAMEDATA: \"LOADING_GAMEDATA\",\n}\n\nexport const PLAYERDATA = {\n\tRE_NAME:\"RE_NAME\",\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Square = ({ value='none', className='square', onClick}) =>\n  <button className={className} onClick={onClick}>\n        <div style={showChess(value)}></div>\n  </button>\n\nexport default Square\n\n\nSquare.propTypes = {\n  value: PropTypes.string,\n  className: PropTypes.string,\n  onClick : PropTypes.func\n}\n\nconst showChess = (value) => {\n  switch (value) {\n    case \"BlackChess\":\n      return {\n        width: \"20px\",\n        height: \"20px\",\n        borderRadius:\"10px\",\n        backgroundColor: \"Black\",\n        border: \"1px solid #4d4d4d\",\n      }\n      case \"WhiteChess\":\n        return {\n          width: \"20px\",\n          height: \"20px\",\n          borderRadius:\"10px\",\n          backgroundColor: \"white\",  \n          border: \"1px solid #4d4d4d\",\n        }\n    default:\n      return {\n        width: \"20px\",\n        height: \"20px\",\n        borderRadius:\"10px\",\n      }\n  }\n}\n\n/*\nconst selectedStyle = {\n    backgroundColor: \"white\",\n    color: \"slategray\"\n}\n*/","import React from 'react'\nimport Square from './Square'\nimport PropTypes from 'prop-types'\n\nconst Row = ({rows=[] , rowclass='board-row' , change=f=>f}) =>\n  <div className={rowclass} >\n    {rows.map((columns , columnkey ) =>\n      <Square \n        className={columns.classname}\n        value={columns.value}\n        key={columnkey}\n        onClick={() => change(columnkey)}\n      />\n      )}\n  </div>\n\nconst Board = ({ Squares=[] , boardclass='board', change=f=>f}) =>\n  <div className={boardclass}>\n    {Squares.map((rows, rowskey) =>\n      <div className=\"board-row\" key={rowskey}>\n        <Row rows={rows} key={rowskey} change={(columnkey) => change(rowskey, columnkey)} />\n      </div>\n    )}\n  </div>\n\nexport default Board\n\nBoard.propTypes = {\n  Squares: PropTypes.array,\n  className: PropTypes.string,\n  onClick : PropTypes.func\n}\n\nRow.propTypes = {\n  rows: PropTypes.array,\n  className: PropTypes.string,\n  onClick : PropTypes.func\n}\n\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Board from './Board'\nimport '../../stylesheets/page.css'\n\n\nexport \tclass  GamePage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state =  this.props.initialstate\n\t\tthis.mainchange = this.mainchange.bind(this)\n\t\tthis.loadingdata = this.loadingdata.bind(this)\n\t\tthis.adddata = this.props.adddata\n\t\tthis.deldata = this.props.deldata\t\t\n\t}\n\tmainchange = () => {\n\t\t// Need compoent to make \n\t\tconsole.log(\"Sorry, you did not make the method\")\n\t}\n\tjumpto = (step) => {\n\t\tif (step === 0) {\n\t\t\tthis.setState(this.props.initialstate)\n\t\t}\n\t\tthis.setState({\n\t\t\thistory: this.state.history.slice(0,step + 1),\n\t\t\tgameinfo: {\n\t\t\t\t...this.state.gameinfo,\n\t\t\t\tturns: step,\n\t\t\t\tactionlists: this.state.gameinfo.actionlists.slice(0, step),\n\t\t\t\tgamestate: \"Game Playing\"\n\t\t\t}}\n\t\t\t)\n\t\t}\n\t// \n\tloadingdata = (gamedata) => {\n\t\twindow.setTimeout(( () => this.jumpto(0) ), 0)\n\t\tgamedata.chesshistory.reduce((_previousValue,action,index) => window.setTimeout(( () => this.mainchange(action.rowskey, action.columnskey) ), 1000 * index + 1000), 0)\n\t}\n\trender() {\n\t\tconst history = this.state.history\n\t\tconst info = this.state.gameinfo\n\t\tconst current = history[info.turns]\n\t\tconst localstore = this.props.localstore\n\t\tconst players = this.props.players\n\t\tconst steps = history.map((_element,step) => {\n\t\t\tconst libotton = step ?\n\t\t\t`${players[info.actionlists[step - 1].owner]} Push chess to ( ${info.actionlists[step - 1].rowskey + 1},${info.actionlists[step - 1].columnskey + 1} )` :\n\t\t\t`Go to Start`\n\t\t\treturn (\n\t\t\t\t<li key={step}>\n\t\t\t\t<input type=\"bottom\" value={libotton} onClick={() => this.jumpto(step)} readOnly/>\n\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})\n\t\t\tconst showgamestate = (info,current) => {\n\t\t\t\tif (info.gamestate === \"Game End\") {\n\t\t\t\t\tif (info.winner !== \"No Winner\") {\n\t\t\t\t\t\treturn `Winner is ${players[info.winner]}, Loser is ${players[info.loser]}`\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn `The Ｇame ended in a tie.`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn `${players[current.nowplayer]} ,  Please push your Chess`\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst showlocalstore = (store) =>{\n\t\t\t\tif (store.length === 0)\n\t\t\t\t\treturn <p>No Local Save</p>\n\t\t\t\treturn <ol>{store.map((gamedata,index) => \n\t\t\t\t\t<li key={index}>\n\t\t\t\t\t<input type=\"bottom\" value=\"X\" style={{width: 15 }}  onClick={() => this.deldata(gamedata.id)} />\n\t\t\t\t\t<input type=\"bottom\" value={`Time: ${gamedata.date.toLocaleString('zh-cn')} `} onClick={() => this.loadingdata(gamedata)} />\n\t\t\t\t\t</li>\n\t\t\t\t)}</ol>\n\t\t\t}\n\t\t\tconst showsavebottom = (info) => {\n\t\t\t\treturn (info.gamestate === \"Game End\") ?\n\t\t\t\t<input type=\"bottom\" value=\"Save Result\" onClick={() => this.adddata(info.gamename,info.actionlists)} /> :\n\t\t\t\t<p></p>\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<section className=\"game\" >\n\t\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t\t<h1>{info.gamename}</h1>\n\t\t\t\t\t\t<h2>{showgamestate(info,current)}</h2>\n\t\t\t\t\t\t<Board \n\t\t\t\t\t\t\tSquares= {current.squares} \n\t\t\t\t\t\t\tclassName='board' \n\t\t\t\t\t\t\tchange={(rowskey, columnskey) => this.mainchange(rowskey, columnskey)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<h2>本遊戲的說明</h2>\n\t\t\t\t\t\t<ol>{this.props.gamerule}</ol>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\" >\n\t\t\t\t\t<h2>{`遊戲歷程`/*Game Step*/}</h2>\n\t\t\t\t\t<p>{`點擊按鍵，可以跳到特定的狀態。`/*there are all steps in the game , click bottom for  jumping to special state of Game*/}</p>\n\t\t\t\t\t<p>{`遊戲結束時，可以把記錄存在本機。`/*When game is end , you can save data to local*/}</p>\n\t\t\t\t\t{showsavebottom(info)}\n\t\t\t\t\t<ol>{steps}</ol>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-localstore\">\n\t\t\t\t\t<h2>本機存檔{/*Local Save*/}</h2>\n\t\t\t\t\t<p>這裡是本機存檔的列表</p>\n\t\t\t\t\t<p>按下時間的按鍵，就可以把存檔的記錄再表演一次</p>\n\t\t\t\t\t<p>按下\"Ｘ\"按鍵，就可以把對應的存檔刪除</p>\n\t\t\t\t\t{showlocalstore(localstore)}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\t\n// ========================================\n\n\n\nGamePage.propTypes = {\n  squares: PropTypes.array,\n  list: PropTypes.array,\n  info: PropTypes.object,\n  addlist: PropTypes.func,\n  dellist: PropTypes.func,\n  addchess: PropTypes.func,\n  changeplayer: PropTypes.func,\n  endgame: PropTypes.func,\n  begingame: PropTypes.func,\n  beginboard: PropTypes.func,\n  clearlist: PropTypes.func\n}","/* No use function\n//set squares's value\nexport const SetSquareValue = ChessValue => Square => {\n\tSquare.value = ChessValue\n\treturn Square\n}\n//set square's owner ex:SetSquareOwner(\"player1\")(nowsquare)\nexport const SetSquareOwner = OwnValue => Square => {\n\tSquare.owner = OwnValue\n\treturn Square\n}\n//set square's lock\nexport const SetSquareLock = Lockvalue => Square => {\n\tSquare.lock = Lockvalue\n\treturn Square\n}\n*/\n// set chess to a square\nexport const setChessToSquares = (chess, squares) => {\n\tsquares[chess.rowskey][chess.columnskey] = {value: chess.value, owner: chess.owner, lock: chess.lock}\n\treturn squares\n}\n// add chess to list\nexport const addChessToLists = (chess={}, lists=[]) => lists.concat([chess])\n//take one square form Squares ex:TakeSquare(1,1)(nowsquares)\nexport const TakeSquare = (rowskey, columnkey) => Squares  => Squares[rowskey][columnkey]\n//check square's owner ex:CheckOwner(\"player1\")(nowsquare) No use function\n// export const CheckSquareOwner = OwnValue => Square  => (Square.owner  === OwnValue) ? true : false \n//check squre's lock ex:Checklock(nowsquare)\nexport const CheckSquareLock = (Square) => Square.lock\n//check square exist\nexport const CheckSquareExist = (rowslength,columnslength)  => (rowskey, columnskey) => rowskey >= 0 && rowskey < rowslength && columnskey >= 0 && columnskey < columnslength\n//check squre's value\nexport const CheckSquareValue = Value => Square => {\n\treturn(Square.value  === Value) ? 1 : 0\n}\n//delection point\n/*\nexport const DelPoint = (Square) => {\n\treturn compose(\n\t\tSetSquareOwner(\"\"),\n\t\tSetSquareValue(\"\")\n\t)(Square)\n}\n*/\n// copy squares\nexport const SquaresDeepCopy = (Squares) => \n{\n    let CopySquares = []\n    for (let i = 0, ilen = Squares.length ; i < ilen ; i++ )\n    {\n        let Nowrows = Squares[i]\n        CopySquares[i] = []\n        for (let j = 0, jlen = Nowrows.length ; j < jlen ; j++ )\n        {\n            CopySquares[i][j] = Object.assign({},Nowrows[j])\n        }\n    }\n    return CopySquares\n}","import  {CheckSquareValue, setChessToSquares, addChessToLists} from './gamebasics'\nimport { compose } from 'redux';\n//find max length for connect chesses by specil vextor\nexport const FindLength = (VectorX, VectorY) => connectlength => (CurrentPoint , NowSquares) => {\n    let contilen = 1\n    let CheckValue = CheckSquareValue(CurrentPoint.value)\n    let lengthx = NowSquares.length\n    for (let i = 1 ; i < connectlength ; i++) {\n        let tapointx = CurrentPoint.rowskey - i * VectorX\n        let tapointy = CurrentPoint.columnskey - i * VectorY\n        if ( tapointx >= 0 && tapointx < lengthx && tapointy >= 0 && tapointy < NowSquares[tapointx].length){\n            contilen += CheckValue(NowSquares[tapointx][tapointy])\n        }\n        else{\n            break\n        }\n    }\n    for (let j = 1 ; j< connectlength ; j ++) {\n        let tapointx = CurrentPoint.rowskey + j * VectorX\n        let tapointy =  CurrentPoint.columnskey + j * VectorY\n        if ( tapointx >= 0 && tapointx < lengthx && tapointy >= 0 && tapointy < NowSquares[tapointx].length){\n            contilen += CheckValue(NowSquares[tapointx][tapointy])\n        }\n        else{\n            break\n        }\n    }\n    return contilen\n}\n//find maxlength for row,Column ,Slash or BackSlash by Currying\nexport const Rowlength = FindLength(1,0) \nexport const Columnlength = FindLength(0,1)\nexport const Slashlength = FindLength(1,1)\nexport const BackSlashlength = FindLength(1,-1)\n//judge length exist\nexport const JudgeWinner = length => (CurrentPoint , Squares) =>\n{\n    return  Rowlength(length)(CurrentPoint,Squares) >= length || \n    Columnlength(length)(CurrentPoint,Squares) >= length ||\n    Slashlength(length)(CurrentPoint,Squares) >= length  ||\n    BackSlashlength(length)(CurrentPoint,Squares) >= length \n}\n// ============\n\nexport const ProcessTioTeoTicSpecial = (ProcessObject) => {\n    return ProcessObject = compose(\n        TTTSJudge,\n        addNewChess,\n        removeOldChess\n    )(ProcessObject)\n}\n// remove the most old chess \nexport const removeOldChess = (ProcessObject = {}) => {\n    let squares = ProcessObject.squares\n    let lists = ProcessObject.lists\n    if (lists.length >= 6) {\n        let oldchess = {\n            rowskey: lists[0].rowskey,\n            columnskey: lists[0].columnskey,\n            value: \"\",\n            owner: \"\",\n            lock: false,\n        }\n        lists = lists.filter((_chess,index) => index !== 0)\n        squares = setChessToSquares(oldchess,squares)\n    }\n    ProcessObject.squares = squares\n    ProcessObject.lists = lists\n    return ProcessObject\n}\nexport const addNewChess = (ProcessObject = {}) => {\n    let chess = ProcessObject.chess\n    ProcessObject.lists = addChessToLists(chess,ProcessObject.lists)\n\tProcessObject.actionlists = addChessToLists(chess,ProcessObject.actionlists)\n    ProcessObject.squares = setChessToSquares(chess,ProcessObject.squares)\n    return ProcessObject\n}\nexport const TTTSJudge = (ProcessObject = {}) => {\n    ProcessObject.gamestate =  (JudgeWinner(3)(ProcessObject.chess,ProcessObject.squares)) ? \"Game End\" : \"Game Playing\"\n    return ProcessObject\n}","import { compose } from 'redux';\nimport { GamePage } from \"../ui/page\";\nimport { SquaresDeepCopy } from \"../../functions/gamebasics\";\nimport { TTTSJudge, addNewChess, removeOldChess,  } from '../../functions/connectgame'\n\nexport class TioTeoTicSpecialForm extends GamePage {\n\tmainchange = (rowskey, columnskey) => {\n\t\tconst history = this.state.history.slice(0, this.state.gameinfo.turns + 1);\n    const current = history[history.length - 1];\n\t\tconst player = current.nowplayer\n\t\tconst info = this.state.gameinfo\n\t\tlet newsquares = SquaresDeepCopy(current.squares);\n\t\t// check broad is lock\n    if (newsquares[rowskey][columnskey].lock === true || info.gamestate === \"Game End\")\n\t\t\treturn\n\t\t// construct new chess\n\t\tconst  newchess = {\n\t\t\trowskey: rowskey,\n      columnskey: columnskey,\n      value: (player === \"player1\") ? \"BlackChess\" : \"WhiteChess\",\n\t\t\towner: player,\n\t\t\tlock: true,\n\t\t}\n\t\t// use compose function( from redux,js) to processing state, and get new state\n\t\tlet processobject = compose(\n\t\t\tTTTSJudge,\n\t\t\taddNewChess,\n\t\t\tremoveOldChess\n\t)({\n\t\tsquares: newsquares,\n\t\tlists: current.showlists.slice(),\n\t\tactionlists: info.actionlists.slice(),\n\t\tchess: newchess,\n\t\tgamestate: info.gamestate,\n\t})\n\t\t// set state\n\t\tlet winner = \"\"\n\t\tlet loser = \"\"\n\tif (processobject.gamestate === \"Game End\") {\n\t\t\twinner = player\n\t\t\tloser = (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t}\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: processobject.squares,\n\t\t\t\t\tshowlists: processobject.lists,\n\t\t\t\t\tnowplayer: (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t\t\t}]),\n\t\t\tgameinfo: {\n\t\t\t\t...info,\n\t\t\t\tactionlists: processobject.actionlists,\n\t\t\t\tturns: info.turns + 1,\n\t\t\t\tgamestate: processobject.gamestate,\n\t\t\t\twinner: winner,\n\t\t\t\tloser: loser,\n\t\t\t},\n\t\t\t})\n  }\n}\n\n// ========================================\n\nexport class TioTeoTicForm extends GamePage {\n\tmainchange = (rowskey, columnskey) => {\n\t\tconst history = this.state.history.slice(0, this.state.gameinfo.turns + 1);\n    const current = history[history.length - 1];\n\t\tconst player = current.nowplayer\n\t\tconst info = this.state.gameinfo\n\t\tlet newsquares = SquaresDeepCopy(current.squares);\n\t\t// check broad is lock\n    if (newsquares[rowskey][columnskey].lock === true || info.gamestate === \"Game End\")\n\t\t\treturn\n\t\t// construct new chess\n\t\tconst  newchess = {\n\t\t\trowskey: rowskey,\n      columnskey: columnskey,\n      value: (player === \"player1\") ? \"BlackChess\" : \"WhiteChess\",\n\t\t\towner: player,\n\t\t\tlock: true,\n\t\t}\n\t\t// use compose function( from redux,js) to processing state, and get new state\n\t\tlet processobject = compose(\n\t\t\tTTTSJudge,\n\t\t\taddNewChess\n\t)({\n\t\tsquares: newsquares,\n\t\tlists: current.showlists.slice(),\n\t\tactionlists: info.actionlists.slice(),\n\t\tchess: newchess,\n\t\tgamestate: info.gamestate,\n\t})\n\t\t// set state\n\t\tlet winner = \"\"\n\t\tlet loser = \"\"\n\tif (processobject.gamestate === \"Game End\") {\n\t\t\twinner = player\n\t\t\tloser = (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t}\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: processobject.squares,\n\t\t\t\t\tshowlists: processobject.lists,\n\t\t\t\t\tnowplayer: (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t\t\t}]),\n\t\t\tgameinfo: {\n\t\t\t\t...info,\n\t\t\t\tactionlists: processobject.actionlists,\n\t\t\t\tturns: info.turns + 1,\n\t\t\t\tgamestate: processobject.gamestate,\n\t\t\t\twinner: winner,\n\t\t\t\tloser: loser,\n\t\t\t},\n\t\t\t})\n  }\n}","import { compose } from 'redux';\n import { GamePage } from \"../ui/page\";\nimport { SquaresDeepCopy ,  addChessToLists, setChessToSquares} from \"../../functions/gamebasics\";\nimport { calculationArrays } from \"../../functions/catchgame\";\n\nexport class OthelloForm extends GamePage {\n\tmainchange = (rowskey, columnskey) => {\n\t\tconst history = this.state.history.slice(0, this.state.gameinfo.turns + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst player = current.nowplayer\n\t\tconst info = this.state.gameinfo\n\t\tlet newsquares = SquaresDeepCopy(current.squares);\n\t\t// check broad is lock\n    if (newsquares[rowskey][columnskey].lock === true || info.gamestate === \"Game End\")\n\t\t\treturn\n\t\t// construct new chess\n\t\tconst  newchess = {\n\t\t\trowskey: rowskey,\n      columnskey: columnskey,\n      value: (player === \"player1\") ? \"BlackChess\" : \"WhiteChess\",\n\t\t\towner: player,\n\t\t\tlock: true,\n\t\t}\n\t\t// use compose function( from redux,js) to processing state, and get new state\n\t\tlet processobject = compose(\n\t\t\tJudgeGame,\n\t\t\torganizeBoard,\n\t\t\taddNewChess,\n\t)({\n\t\tsquares: newsquares,\n\t\tplayer1chess: current.player1chess,\n\t\tplayer2chess: current.player2chess,\n\t\tactionlists: info.actionlists.slice(),\n\t\tchess: newchess,\n\t\tgamestate: info.gamestate,\n\t})\n\t\t// set state\n\t\tlet winner = \"\"\n\t\tlet loser = \"\"\n\t\tif (processobject.gamestate === \"Game End\") {\n\t\t\tif (processobject.player1chess > processobject.player2chess) {\n\t\t\t\twinner = \"player1\"\n\t\t\t\tloser = \"player2\"\n\t\t\t}\n\t\t\telse if (processobject.player2chess > processobject.player1chess) {\n\t\t\t\twinner = \"player2\"\n\t\t\t\tloser = \"player1\"\n\t\t\t}\n\t\t\telse {\n\t\t\t\twinner = \"No Winner\"\n\t\t\t\tloser = \"No Loser\"\n\t\t\t}}\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: processobject.squares,\n\t\t\t\t\tplayer1chess:  processobject.player1chess,\n\t\t\t\t\tplayer2chess:  processobject.player2chess,\t\n\t\t\t\t\tnowplayer: (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t\t\t}]),\n\t\t\tgameinfo: {\n\t\t\t\t...info,\n\t\t\t\tactionlists: processobject.actionlists,\n\t\t\t\tturns: info.turns + 1,\n\t\t\t\tgamestate: processobject.gamestate,\n\t\t\t\twinner: winner,\n\t\t\t\tloser: loser,\n\t\t\t},\n\t\t})\n}\n}\n\n//--------------------------------------\n\nconst addNewChess = (ProcessObject = {}) => {\n\tlet chess = ProcessObject.chess\n\tProcessObject.actionlists = addChessToLists(chess,ProcessObject.actionlists)\n\tProcessObject.squares = setChessToSquares(chess,ProcessObject.squares)\n\treturn ProcessObject\n}\nconst organizeBoard = (ProcessObject = {}) => {\n\tlet chess = ProcessObject.chess\n\tlet squares = ProcessObject.squares\n\tlet player = chess.owner\n\t//caculate the array to change chess\tand flatten 2-dimension-array to 1-dimension-array\n\tconst changeArrays = calculationArrays(chess, squares).reduce((accumulator,currentValue)=> accumulator.concat(currentValue),[])\n\tlet changenumber = changeArrays.length\n\t//change chess by array\n\tif (changenumber > 0){\n\t\tProcessObject.squares = changeArrays.reduce((presquares,nowchess) => setChessToSquares(nowchess,presquares),squares)\n\t}\n\t//re-caculate the number of player's chess\n\tif (player === \"player1\") {\n\t\tProcessObject.player1chess += changenumber + 1\n\t\tProcessObject.player2chess -= changenumber\n\t}\n\telse {\n\t\tProcessObject.player1chess -= changenumber\n\t\tProcessObject.player2chess += changenumber + 1\n\t}\n\treturn ProcessObject\n}\nconst JudgeGame = (ProcessObject = {}) => {\n\tlet player1chess = ProcessObject.player1chess\n\tlet player2chess = ProcessObject.player2chess\n\tif ( /*(player1chess === 0) || (player2chess === 0) || */(player1chess + player2chess >= 64) ) {\n\t\tProcessObject.gamestate = \"Game End\"\n\t}\n\telse {\n\t\tProcessObject.gamestate = \"Game Playing\"\n\t}\n\treturn ProcessObject\n}","\nexport const calculationArrays = (chess ={}, squares = []) => {\n\tlet resultArray = []\n\tlet targetvalue = chess.value\n\tlet lengthx = squares.length\n\tfor (let i = 0 ; i < 9 ; i++) {\n\t\tlet vec = [Math.floor( i / 3) - 1 ,(i % 3) - 1]\n\t\tresultArray[i] = []\n\t\tif (vec === [0,0]) {\n\t\t\tcontinue\n\t\t}\n\t\tfor (let j = 1, jth = lengthx ; j < jth ; j ++) {\n\t\t\tlet tapointx = chess.rowskey + vec[0] * j\n\t\t\tlet tapointy = chess.columnskey + vec[1] * j\n\t\t\tlet tavalue = \"\"\n\t\t\tif ( tapointx >= 0 && tapointx < lengthx && tapointy >= 0 && tapointy < squares[tapointx].length) {\n\t\t\t\ttavalue = squares[chess.rowskey + vec[0] * j][chess.columnskey + vec[1] * j].value\n\t\t\t}\n\t\t\tif (tavalue === \"\") {\n\t\t\t\tresultArray[i] = []\n\t\t\t\tbreak\n\t\t\t}\n\t\t\telse if (tavalue === targetvalue) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\telse if (tavalue !== targetvalue) {\n\t\t\t\tresultArray[i][j - 1] = {\n\t\t\t\t\trowskey: chess.rowskey + vec[0] * j ,\n\t\t\t\t\tcolumnskey: chess.columnskey + vec[1] * j ,\n\t\t\t\t\tvalue: chess.value,\n\t\t\t\t\towner: chess.owner,\n\t\t\t\t\tlock: chess.lock\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn resultArray\n}\n","import React from 'react'\nimport fetch from 'isomorphic-fetch';\n\nexport \tclass  HomeForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.movegamedata = this.props.movegamedata.bind(this) \n\t\tthis.moveplayerdata = this.props.moveplayerdata.bind(this)\n\t\tthis.playerdata = this.props.playerdata\n\t\tthis.clear = this.clear.bind(this)\n\t\tthis.loadingonlinedata = this.loadingonlinedata.bind(this)\n\t\tthis.processdata = this.processdata.bind(this)\n\t}\n\tloadingonlinedata(url) {\n\t\tfetch(url)\n\t\t.then(response => response.json())\n\t\t.then(onlinedata => this.processdata(onlinedata))\n\t}\n\tprocessdata(data) {\n\t\tthis.movegamedata(data.playerdata.player1,data.playerdata.player2)\n\t\tthis.moveplayerdata(data.gameDatas)\n\t}\n\tclear() {\n\t\tthis.movegamedata([])\n\t\tthis.moveplayerdata(\"Tom\",\"Jerry\")\n\t}\n\trender() {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>遊戲玩家</h1>\n\t\t\t\t\t\t<div>{`遊戲玩家１：${this.props.playerdata.player1}`}</div>\n\t\t\t\t\t\t<div>{`遊戲玩家２：${this.props.playerdata.player2}`}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>讀取伺服器記錄，但是還沒架設伺服器就是了</h1>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t<input type=\"buttom\" value=\"回復初始\" onClick={() => this.clear()} />\t\t\t\t\t\t\n\t\t\t\t\t\t<input type=\"buttom\" value=\"讀取存檔１\" onClick={() => this.loadingonlinedata(\"url1\")} />\n\t\t\t\t\t\t<input type=\"buttom\" value=\"讀取存檔２\" onClick={() => this.loadingonlinedata(\"url2\")} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p>如果沒有載入預設的遊戲玩家的名稱，請先按一下“回復初始”按鍵來強制載入遊戲玩家的名稱</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}","import {connect } from 'react-redux';\nimport { AddGameData, DelGameData, LoadingGameDada } from \"../../redux/actions/GameDataAction\";\nimport { ChangePlayerName } from \"../../redux/actions/PlayerDataAction\";\nimport { TioTeoTicForm, TioTeoTicSpecialForm } from \"./TioTeoTic\";\nimport { OthelloForm } from \"./othello\";\nimport { HomeForm } from \"./home\";\n\n\n//Incoming store with special game-name\nconst mapStateToProps = gamename => state => ({\n\tlocalstore: (state.gameDatas.length !== 0) ?\n\tstate.gameDatas.filter((gamedata) => gamedata.gamename === gamename) :\n\t[],\n\tplayers: state.playerData\n})\n\n// coonect dispatch and method\nconst mapDispatchToProps = dispatch => ({\n\tdeldata(id) {\n\t\tdispatch(DelGameData(id))\n\t},\n\tadddata(gamename,actionlists) {\n\t\tdispatch(AddGameData(gamename,actionlists))\n\t}\n})\n\n//HOC for connect Ui-component , game-name, state and dispatch\nconst HOCforconnect = (component, gamename) => {\n\treturn connect(\n\t\tmapStateToProps(gamename),\n\t\tmapDispatchToProps\n\t\t)(component)\n}\n\nexport const TioTeoTicSpecialGame = HOCforconnect(TioTeoTicSpecialForm, \"TioTeoTicSpecial\")\nexport const TioTeoTicGame = HOCforconnect(TioTeoTicForm, \"TioTeoTic\")\nexport const GomokuGame = HOCforconnect(TioTeoTicForm, \"Gomoku\")\nexport const OthelloGame = HOCforconnect(OthelloForm,\"Othello\")\n\nexport const HomePage = connect(\n\tstate => ({\n\t\tplayerdata: state.playerData\n\t}),\n\tdispatch => ({\n\t\tmoveplayerdata(player1,player2) {\n\t\t\tdispatch(ChangePlayerName(player1,player2))\n\t\t},\n\t\tmovegamedata(data) {\n\t\t\tdispatch(LoadingGameDada(data))\n\t\t}\n\t})\n\t)(HomeForm)\n","import { GAMEDATA } from \"../constants\";\nimport { v4 } from 'uuid';\n\nexport const AddGameData = (gamename,chesshistory) => ({\n\ttype: GAMEDATA.ADD_GAMEDATA,\n\tid: v4(),\n\tgamename,\n\tdate: new Date(),\n\tchesshistory,\n})\n\nexport const DelGameData = (id) => ({\n\ttype: GAMEDATA.DEL_GAMEDATA,\n\tid,\n})\n\nexport const LoadingGameDada = (gameDatas) => ({\n\ttype: GAMEDATA.LOADING_GAMEDATA,\n\tgameDatas,\n})","import { PLAYERDATA } from \"../constants\";\n\nexport const ChangePlayerName = (player1,player2) => ({\n\ttype: PLAYERDATA.RE_NAME,\n\tplayer1,\n\tplayer2,\n})\n","\nexport const makeEmptyBoard = (row,column) => Array(row).fill(Array(column).fill({value:\"\", owner:\"\", lock: false}))\n\nexport const makeGameHistoryObject = (board,objecta = {}) => Object.assign({\tnowplayer: \"player1\"},{squares: board},objecta)\n\t\nexport const makeGameInfoObject = (gamename) => ({\n\tgamename,\n\tgamestate: \"Game Begin\",\n\twinner: \"\",\n\tloser: \"\",\n\tturns: 0,\n\tactionlists: [],\n})\n\n//changeArrays = calculationArrays(chess, squares).reduce((accumulator,currentValue)=> accumulator.concat(currentValue),[])\n\n//\n\nconst TicTacToeBoard = makeEmptyBoard(3,3)\nconst TicTacToeNeedKey = {showlists : []}\n\nexport const TicTacToeInitialData = {\n\thistory: [makeGameHistoryObject(TicTacToeBoard,TicTacToeNeedKey)],\n\tgameinfo: makeGameInfoObject(\"TioTeoTic\"),\n}\n\nexport const TicTacToeSpecialInitialData = {\n\thistory: [makeGameHistoryObject(TicTacToeBoard,TicTacToeNeedKey)],\n\tgameinfo: makeGameInfoObject(\"TioTeoTicSpecial\"),\n}\n\n//\nconst GomokuBoard = makeEmptyBoard(15,15)\nexport const GomokuInitialData = {\n\thistory: [makeGameHistoryObject(GomokuBoard,TicTacToeNeedKey)],\n\tgameinfo: makeGameInfoObject(\"Gomoku\"),\n}\n\n//\n\nexport const BoardProcessedChess = (chessarray, Board) => {\n\t//return chessarray.reduce((presquares,nowchess) => setChessToSquares(nowchess,presquares),Board)\n\treturn Board\n\t}\n\t\n\t\n\nconst OthelloStartArray = [\n\t{ rowskey: 3, columnskey: 3, value:\"O\",owner:\"player1\",lock: true},\n\t{ rowskey: 3, columnskey: 4, value:\"X\",owner:\"player2\",lock: true},\n\t{ rowskey: 3, columnskey: 3, value:\"X\",owner:\"player2\",lock: true},\n\t{ rowskey: 4, columnskey: 4, value:\"O\",owner:\"player1\",lock: true}\n]\n\nconst OthelloStartBoard = makeEmptyBoard(8,8)\nconst OthelloBoard = BoardProcessedChess(OthelloStartArray,OthelloStartBoard)\n\n\nconst OthelloNeedKey = { player1chess:  0,\tplayer2chess:  0 }\n\n\n\nexport const OthelloInitialData = {\n\thistory: [makeGameHistoryObject(OthelloBoard,OthelloNeedKey)],\n\tgameinfo: makeGameInfoObject(\"Othello\"),\n}\n\n/*\nexport const OthelloInitialData ={\n\thistory: [{\n\t\t\t\t\tsquares : Array(8).fill(Array(8).fill({value:\"\", owner:\"\", lock: false})), // construct 8* 8 squares \n\t\t\t\t\tplayer1chess:  0,\n\t\t\t\t\tplayer2chess:  0,\n\t\t\t\t\tnowplayer: \"player1\"\n\t}],\n\tgameinfo:{\n\t\t\t\t\tgamename: \"Othello\",\n\t\t\t\t\tgamestate: \"Game Begin\",\n\t\t\t\t\tplayer1: \"Tom\",\n\t\t\t\t\tplayer2: \"Jerry\",\n\t\t\t\t\twinner: \"\",\n\t\t\t\t\tloser:\"\",\n\t\t\t\t\tturns: 0,\n\t\t\t\t\tactionlists:[],\n\t},\n}\n*/","import { React} from 'react';\n\nexport const PAGES = [\n\t{\n\t\tid: \"TicTacToe\",\n\t\trouter: \"/TicTacToe\",\n\t\tzh_name: \"井字棋\"\n\t},\n\t{\n\t\tid: \"TicTacToeSpecial\",\n\t\trouter: \"/TicTacToeSpecial\",\n\t\tzh_name: \"井字棋變化版\"\n\t},\t\n\t{\n\t\tid: \"Othello\",\n\t\trouter: \"/Othello\",\n\t\tzh_name: \"黑白棋\"\n\t}\n]\nexport const TicTacToeRule = () => \n\t<React.Fragment>\n\t\t<li>雙方輪流放子</li>\n\t\t<li>先連成一線者得勝</li>\n\t</React.Fragment>\n\n\texport const TicTacToeSpecialRule = () => \n\t<React.Fragment>\n\t\t<li>是井字棋的變化版</li>\n\t\t<li>雙方輪流放子</li>\n\t\t<li>先連成一線者得勝</li>\n\t\t<li>當現在盤面上有六顆棋子時。在第七個棋子落下前，會先移出最早放的棋子，再放下第七顆</li>\n\t</React.Fragment>\n\n\texport const GomokuRule = () => \n\t<React.Fragment>\n\t\t<li>是五子棋的”極簡化版“</li>\n\t\t<li>雙方輪流放子</li>\n\t\t<li>先連成一線者得勝</li>\n\t\t<li>沒有設定連珠規則或RIF規則(因為多寫程式很麻煩)</li>\n\t</React.Fragment>\n\n\n\texport const OthelloRule = () => \n\t<React.Fragment>\n\t\t<li>是奧賽羅棋的”極簡化版“</li>\n\t\t<li>雙方輪流放子</li>\n\t\t<li>當棋盤上都放滿棋子時，棋子多的玩家得勝</li>\n\t\t<li>沒有起始棋子(因為個人因素沒能設定棋子)</li>\n\t\t<li>沒有限制下棋子的地方(因為多寫程式很麻煩)</li>\n\t</React.Fragment>\n","import React from 'react';\nimport { MainMenu } from './MainMenu'\nimport '../../stylesheets/pages.scss'\nimport { OthelloGame, TioTeoTicGame, TioTeoTicSpecialGame, GomokuGame,HomePage } from \"../contain/contain\";\nimport { OthelloInitialData, TicTacToeInitialData ,GomokuInitialData ,TicTacToeSpecialInitialData} from \"./initialstatedata\";\nimport { OthelloRule, TicTacToeRule, TicTacToeSpecialRule, GomokuRule } from \"../../data/gamerule\";\n\nconst PageTemplate = ({children}) =>\n    <div className=\"page\">\n        <MainMenu />\n        {children}\n    </div>\n\nexport const Home = () =>\n<PageTemplate>\n    <HomePage />\n</PageTemplate>\n\n\n    export const TicTacToe = () =>\n    <PageTemplate>\n            <TioTeoTicGame initialstate = {TicTacToeInitialData} gamerule={TicTacToeRule} />\n    </PageTemplate>\n\n    export const TicTacToeSpecial = () =>\n    <PageTemplate>\n            <TioTeoTicSpecialGame initialstate = {TicTacToeSpecialInitialData} gamerule={TicTacToeSpecialRule} />\n    </PageTemplate>\n\n    export const Gomoku = () =>\n    <PageTemplate>\n            <GomokuGame initialstate = {GomokuInitialData} gamerule={GomokuRule} />\n    </PageTemplate>\n\n    \nexport const Othello = () =>\n    <PageTemplate>\n        <OthelloGame initialstate = {OthelloInitialData} gamerule={OthelloRule} />\n    </PageTemplate>\n\nexport const Whoops404 = ({ location }) =>\n    <div className=\"Whoops-404\">\n        <hi>找不到以'{location.pathname}'為名稱的分頁</hi>\n    </div>","import { PLAYERDATA } from \"../constants\"\n\nexport const playerData = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase PLAYERDATA.RE_NAME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayer1: action.player1,\n\t\t\t\tplayer2: action.player2,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import { GAMEDATA } from \"../constants\";\n\nexport const gameData = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase GAMEDATA.ADD_GAMEDATA:\n\t\t\treturn [{\n\t\t\t\tid: action.id,\n\t\t\t\tgamename: action.gamename,\n\t\t\t\tdate: action.date,\n\t\t\t\tchesshistory: action.chesshistory,\n\t\t\t}]\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const gameDatas = (state = [] , action) => {\n\tswitch (action.type) {\n\t\tcase GAMEDATA.ADD_GAMEDATA:\n\t\t\treturn state.concat(gameData([],action))\n\t\tcase GAMEDATA.DEL_GAMEDATA:\n\t\t\treturn state.filter((data) => data.id !== action.id)\n\t\tcase GAMEDATA.LOADING_GAMEDATA:\n\t\t\treturn action.gameDatas\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport {playerData  } from \"./reducers/PlayerDataReducers\";\nimport { gameDatas } from \"./reducers/GameDataReducer\";\n\nconst initialDate ={\n\tgameDatas:[],\n\tplayerData:{\n\t\tplayer1: \"Tom1\",\n\t\tplayer2: \"Jerry1\",\n\t},\n}\n\nconst logger = store => next => action => {\n\tlet result\n\t//console.groupCollapsed(\"dispatching\", action.type)\n\t//console.log('prev state' , store.getState())\n\t//console.log('action', action)\n\tresult = next(action)\n\t//console.log('next state', store.getState())\n\t//console.groupEnd()\n\treturn result\n}\n\nconst saver = store => next => action => {\n\tlet result = next(action)\n\tlocalStorage['redux-store'] = JSON.stringify(store.getState())\n\treturn result\n}\n\nexport const storeFactory = (initialState = initialDate ) =>(\n\tapplyMiddleware(logger, saver)(createStore)(\n\t\tcombineReducers({gameDatas, playerData}) ,\n\t\t(localStorage['redux-store']) ?\n\t\tJSON.parse(localStorage['redux-store']) :\n\t\tinitialState\n\t)\n)\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux';\nimport {\n  HashRouter,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport * as Pages from './components/menu/pages'\nimport { PAGES } from \"./data/pagesconster\";\nimport { storeFactory } from \"./redux/Store\";\n\nwindow.React = React\n\nconst initialDate ={\n\tgameDatas:[],\n\tplayerData:{\n\t\tplayer1: \"Tom\",\n\t\tplayer2: \"Jerry\",\n\t},\n}\n\n\nconst store = storeFactory(initialDate)\n\nrender(\n  <Provider store={store} >\n  <HashRouter>\n  <div className=\"main\" >\n  <Switch>\n  <Route exact path=\"/\" component={Pages[\"Home\"]} />\n  {// Use conster of Pages to map Route\n    PAGES.map((page,index) => {\n    return <Route key={index} path={page.router} component={Pages[page.id]} />\n  })}\n  <Route component={Pages.Whoops404} />\n  </Switch>\n  </div>\n  </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}