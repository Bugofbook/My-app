{"version":3,"sources":["consters/pagesconster.js","components/menu/MainMenu.js","redux/constants.js","components/ui/Square.js","components/ui/Board.js","components/ui/page.js","functions/gamebasics.js","functions/connectgame.js","components/contain/TioTeoTic.js","functions/catchgame.js","components/contain/othello.js","components/contain/contain.js","redux/actions/GameDataAction.js","components/menu/initialstatedata.js","components/menu/pages.js","redux/reducers/PlayerDataReducers.js","redux/reducers/GameDataReducer.js","redux/Store.js","index.js"],"names":["PAGES","id","router","zh_name","selectedStyle","backgroundColor","color","MainMenu","react_default","a","createElement","className","NavLink","to","map","page","activeStyle","concat","GAMEDATA","PLAYERDATA","Square","_ref","_ref$value","value","_ref$className","onClick","Row","_ref$rows","rows","_ref$rowclass","rowclass","_ref$change","change","f","columns","columnkey","ui_Square","classname","key","Board","_ref2","_ref2$Squares","Squares","_ref2$boardclass","boardclass","_ref2$change","rowskey","Board_Row","GamePage","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","mainchange","console","log","jumpto","step","setState","initialstate","history","state","slice","gameinfo","objectSpread","turns","actionlists","gamestate","loadingdata","gamedata","window","setTimeout","chesshistory","reduce","_previousValue","action","index","columnskey","bind","assertThisInitialized","adddata","deldata","inherits","createClass","store","_this2","info","current","localstore","steps","_element","libotton","owner","type","gamename","winner","loser","nowplayer","showgamestate","ui_Board","squares","showsavebottom","length","style","width","date","toLocaleString","React","Component","setChessToSquares","chess","lock","addChessToLists","arguments","undefined","SquaresDeepCopy","CopySquares","i","ilen","Nowrows","j","jlen","assign","FindLength","VectorX","VectorY","connectlength","CurrentPoint","NowSquares","Value","contilen","CheckValue","lengthx","tapointx","tapointy","Rowlength","Columnlength","Slashlength","BackSlashlength","removeOldChess","ProcessObject","lists","oldchess","filter","_chess","addNewChess","TTTSJudge","TioTeoTicForm","_GamePage","_getPrototypeOf2","_len","args","Array","_key","apply","player","newsquares","newchess","processobject","compose","showlists","propTypes","PropTypes","array","list","object","addlist","func","dellist","addchess","changeplayer","endgame","begingame","beginboard","clearlist","OthelloForm","JudgeGame","organizeBoard","player1chess","player2chess","changeArrays","resultArray","targetvalue","vec","Math","floor","jth","tavalue","calculationArrays","accumulator","currentValue","changenumber","presquares","nowchess","mapDispatchToProps","dispatch","DelGameData","v4","Date","AddGameData","HOCforconnect","component","connect","gameDatas","mapStateToProps","TioTeoTicGame","OthelloGame","TicTacToeInitialData","fill","player1","player2","OthelloInitialData","PageTemplate","children","MainMenu_MainMenu","Home","Link","TicTacToe","pages_PageTemplate","Othello","Whoops404","location","pathname","playerData","gameData","data","initialDate","logger","next","saver","result","localStorage","JSON","stringify","getState","initialState","applyMiddleware","createStore","combineReducers","parse","storeFactory","render","es","HashRouter","Switch","Route","exact","path","Pages","document","getElementById"],"mappings":"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","file":"static/js/main.dde9a4d5.chunk.js","sourcesContent":["export const PAGES = [\n\t{\n\t\tid: \"TicTacToe\",\n\t\trouter: \"/TicTacToe\",\n\t\tzh_name: \"井字棋\"\n\t},\n\t{\n\t\tid: \"Othello\",\n\t\trouter: \"/Othello\",\n\t\tzh_name: \"黑白棋\"\n\t}\n]","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport { PAGES } from \"../../consters/pagesconster\";\nimport '../../stylesheets/menus.scss'\n\n\nconst selectedStyle = {\n    backgroundColor: \"white\",\n    color: \"slategray\"\n}\n\n\nexport const MainMenu = () => \n    <nav className=\"main-menu\">\n        <NavLink to=\"/\" >\n            [首頁]\n        </NavLink>\n        {// Use conster of Pages to map NavLink\n            PAGES.map((page) => {\n            return <NavLink to ={page.router} activeStyle={selectedStyle}>{`[${page.zh_name}]`}</NavLink>\n        })}\n    </nav>\n\nexport const TopMenu = ({ match , children }) =>\n<ul className=\"TopMenu\">\n    {/* NO make */ }\n</ul>\n","\nexport const SEQUARE = {\n\tSET_CHESS: \"SET_CHESS\",\n\tCHANGE_VALUE: \"CHANGE_VALUE\",\n\tCHANGE_OWNER: \"CHANGE_OWNER\",\n\tCHANGE_LOCK: \"CHANGE_LOCK\",\n\tCREATE_SQUARES: \"CREATE_SQUARES\",\n}\n\nexport const LIST = {\n\tADD_LIST: \"ADD_LIST\",\n\tDEL_LIST: \"DEL_LIST\",\n\tCLEAR_LIST:\"CLEAR_LIST\",\n}\n\nexport const INFO = {\n\tCHANGE_PLAYER: \"CHANGE_PLAYER\",\n\tCHANGE_GAMESTATE: \"CHANGE_GAMESTATE\",\n\tSET_ENDSTATE: \"SET_ENDSTATE\",\n\tSET_BEGINSTATE: \"SET_BEGINSTATE\",\n}\n\nexport const STYLE = {\n\tSET_STYLE: \"SET_STYLE\",\n\tCREATE_STYLE: \"CREATE_STYLE\",\n}\n\nexport const GAMEDATA = {\n\tADD_GAMEDATA: \"ADD_GAMEDATA\",\n\tDEL_GAMEDATA: \"DEL_GAMEDATA\",\n}\n\nexport const PLAYERDATA = {\n\tRE_NAME:\"RE_NAME\",\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Square = ({ value='none', className='square', onClick}) =>\n  <button className={className} onClick={onClick}>\n        {value}\n  </button>\n\nexport default Square\n\n\nSquare.propTypes = {\n  value: PropTypes.string,\n  className: PropTypes.string,\n  onClick : PropTypes.func\n}\n","import React from 'react'\nimport Square from './Square'\nimport PropTypes from 'prop-types'\n\nconst Row = ({rows=[] , rowclass='board-row' , change=f=>f}) =>\n  <div className={rowclass} >\n    {rows.map((columns , columnkey ) =>\n      <Square \n        className={columns.classname}\n        value={columns.value}\n        key={columnkey}\n        onClick={() => change(columnkey)}\n      />\n      )}\n  </div>\n\nconst Board = ({ Squares=[] , boardclass='board', change=f=>f}) =>\n  <div className={boardclass}>\n    {Squares.map((rows, rowskey) =>\n      <div className=\"board-row\" key={rowskey}>\n        <Row rows={rows} key={rowskey} change={(columnkey) => change(rowskey, columnkey)} />\n      </div>\n    )}\n  </div>\n\nexport default Board\n\nBoard.propTypes = {\n  Squares: PropTypes.array,\n  className: PropTypes.string,\n  onClick : PropTypes.func\n}\n\nRow.propTypes = {\n  rows: PropTypes.array,\n  className: PropTypes.string,\n  onClick : PropTypes.func\n}\n\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Board from './Board'\nimport '../../stylesheets/page.css'\n\n\nexport \tclass  GamePage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state =  this.props.initialstate\n\t\tthis.mainchange = this.mainchange.bind(this)\n\t\tthis.loadingdata = this.loadingdata.bind(this)\n\t\tthis.adddata = this.props.adddata\n\t\tthis.deldata = this.props.deldata\t\t\n\t}\n\tmainchange = () => {\n\t\t// Need compoent to make \n\t\tconsole.log(\"Sorry, you did not make the method\")\n\t}\n\tjumpto = (step) => {\n\t\tif (step === 0) {\n\t\t\tthis.setState(this.props.initialstate)\n\t\t}\n\t\tthis.setState({\n\t\t\thistory: this.state.history.slice(0,step + 1),\n\t\t\tgameinfo: {\n\t\t\t\t...this.state.gameinfo,\n\t\t\t\tturns: step,\n\t\t\t\tactionlists: this.state.gameinfo.actionlists.slice(0, step),\n\t\t\t\tgamestate: \"Game Playing\"\n\t\t\t}}\n\t\t\t)\n\t\t}\n\t// \n\tloadingdata = (gamedata) => {\n\t\twindow.setTimeout(( () => this.jumpto(0) ), 0)\n\t\tgamedata.chesshistory.reduce((_previousValue,action,index) => window.setTimeout(( () => this.mainchange(action.rowskey, action.columnskey) ), 1000 * index + 1000), 0)\n\t}\n\trender() {\n\t\tconst history = this.state.history\n\t\tconst info = this.state.gameinfo\n\t\tconst current = history[info.turns]\n\t\tconst localstore = this.props.localstore\n\t\tconst steps = history.map((_element,step) => {\n\t\t\tconst libotton = step ?\n\t\t\t`${info[info.actionlists[step - 1].owner]} Push chess to ( ${info.actionlists[step - 1].rowskey + 1},${info.actionlists[step - 1].columnskey + 1} )` :\n\t\t\t`Go to Start`\n\t\t\treturn (\n\t\t\t\t<li key={step}>\n\t\t\t\t<input type=\"bottom\" value={libotton} onClick={() => this.jumpto(step)} />\n\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})\n\t\t\tconst showgamestate = (info,current) => {\n\t\t\t\tif (info.gamestate === \"Game End\") {\n\t\t\t\t\tif (info.winner !== \"No Winner\") {\n\t\t\t\t\t\treturn `Winner is ${info[info.winner]}, Loser is ${info[info.loser]}`\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn `The Ｇame ended in a tie.`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn `${info[current.nowplayer]} ,  Please push your Chess`\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst showlocalstore = (store) =>{\n\t\t\t\tif (store.length === 0)\n\t\t\t\t\treturn <p>No Local Save</p>\n\t\t\t\treturn <ol>{store.map((gamedata,index) => \n\t\t\t\t\t<li>\n\t\t\t\t\t<input type=\"bottom\" value=\"X\" style={{width: 15 }}  onClick={() => this.deldata(gamedata.id)} />\n\t\t\t\t\t<input type=\"bottom\" value={`Time: ${gamedata.date.toLocaleString('zh-cn')} `} onClick={() => this.loadingdata(gamedata)} />\n\t\t\t\t\t</li>\n\t\t\t\t)}</ol>\n\t\t\t}\n\t\t\tconst showsavebottom = (info) => {\n\t\t\t\treturn (info.gamestate === \"Game End\") ?\n\t\t\t\t<input type=\"bottom\" value=\"Save Result\" onClick={() => this.adddata(info.gamename,info.actionlists)} /> :\n\t\t\t\t<p></p>\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<section className=\"game\" >\n\t\t\t\t\t<div className=\"game-board\">\n\t\t\t\t\t\t<h1>{info.gamename}</h1>\n\t\t\t\t\t\t<h2>{showgamestate(info,current)}</h2>\n\t\t\t\t\t\t<Board \n\t\t\t\t\t\t\tSquares= {current.squares} \n\t\t\t\t\t\t\tclassName='board' \n\t\t\t\t\t\t\tchange={(rowskey, columnskey) => this.mainchange(rowskey, columnskey)}\n\t\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-info\" >\n\t\t\t\t\t<h2>Game Step</h2>\n\t\t\t\t\t{showsavebottom(info)}\n\t\t\t\t\t<ol>{steps}</ol>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"game-localstore\">\n\t\t\t\t\t<h2>Local Save</h2>\n\t\t\t\t\t{showlocalstore(localstore)}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\t\n// ========================================\n\n\n\nGamePage.propTypes = {\n  squares: PropTypes.array,\n  list: PropTypes.array,\n  info: PropTypes.object,\n  addlist: PropTypes.func,\n  dellist: PropTypes.func,\n  addchess: PropTypes.func,\n  changeplayer: PropTypes.func,\n  endgame: PropTypes.func,\n  begingame: PropTypes.func,\n  beginboard: PropTypes.func,\n  clearlist: PropTypes.func\n}","/* No use function\n//set squares's value\nexport const SetSquareValue = ChessValue => Square => {\n\tSquare.value = ChessValue\n\treturn Square\n}\n//set square's owner ex:SetSquareOwner(\"player1\")(nowsquare)\nexport const SetSquareOwner = OwnValue => Square => {\n\tSquare.owner = OwnValue\n\treturn Square\n}\n//set square's lock\nexport const SetSquareLock = Lockvalue => Square => {\n\tSquare.lock = Lockvalue\n\treturn Square\n}\n*/\n// set chess to a square\nexport const setChessToSquares = (chess, squares) => {\n\tsquares[chess.rowskey][chess.columnskey] = {value: chess.value, owner: chess.owner, lock: chess.lock}\n\treturn squares\n}\n// add chess to list\nexport const addChessToLists = (chess={}, lists=[]) => lists.concat([chess])\n//take one square form Squares ex:TakeSquare(1,1)(nowsquares)\nexport const TakeSquare = (rowskey, columnkey) => Squares  => Squares[rowskey][columnkey]\n//check square's owner ex:CheckOwner(\"player1\")(nowsquare) No use function\n// export const CheckSquareOwner = OwnValue => Square  => (Square.owner  === OwnValue) ? true : false \n//check squre's lock ex:Checklock(nowsquare)\nexport const CheckSquareLock = (Square) => Square.lock\n//check square exist\nexport const CheckSquareExist = (rowslength,columnslength)  => (rowskey, columnskey) => rowskey >= 0 && rowskey < rowslength && columnskey >= 0 && columnskey < columnslength\n//check squre's value\nexport const CheckSquareValue = Value => Square => {\n\treturn(Square.value  === Value) ? 1 : 0\n}\n//delection point\n/*\nexport const DelPoint = (Square) => {\n\treturn compose(\n\t\tSetSquareOwner(\"\"),\n\t\tSetSquareValue(\"\")\n\t)(Square)\n}\n*/\n// copy squares\nexport const SquaresDeepCopy = (Squares) => \n{\n    let CopySquares = []\n    for (let i = 0, ilen = Squares.length ; i < ilen ; i++ )\n    {\n        let Nowrows = Squares[i]\n        CopySquares[i] = []\n        for (let j = 0, jlen = Nowrows.length ; j < jlen ; j++ )\n        {\n            CopySquares[i][j] = Object.assign({},Nowrows[j])\n        }\n    }\n    return CopySquares\n}","import  {CheckSquareValue, setChessToSquares, addChessToLists} from './gamebasics'\nimport { compose } from 'redux';\n//find max length for connect chesses by specil vextor\nexport const FindLength = (VectorX, VectorY) => connectlength => (CurrentPoint , NowSquares) => {\n    let contilen = 1\n    let CheckValue = CheckSquareValue(CurrentPoint.value)\n    let lengthx = NowSquares.length\n    for (let i = 1 ; i < connectlength ; i++) {\n        let tapointx = CurrentPoint.rowskey - i * VectorX\n        let tapointy = CurrentPoint.columnskey - i * VectorY\n        if ( tapointx >= 0 && tapointx < lengthx && tapointy >= 0 && tapointy < NowSquares[tapointx].length){\n            contilen += CheckValue(NowSquares[tapointx][tapointy])\n        }\n        else{\n            break\n        }\n    }\n    for (let j = 1 ; j< connectlength ; j ++) {\n        let tapointx = CurrentPoint.rowskey + j * VectorX\n        let tapointy =  CurrentPoint.columnskey + j * VectorY\n        if ( tapointx >= 0 && tapointx < lengthx && tapointy >= 0 && tapointy < NowSquares[tapointx].length){\n            contilen += CheckValue(NowSquares[tapointx][tapointy])\n        }\n        else{\n            break\n        }\n    }\n    return contilen\n}\n//find maxlength for row,Column ,Slash or BackSlash by Currying\nexport const Rowlength = FindLength(1,0) \nexport const Columnlength = FindLength(0,1)\nexport const Slashlength = FindLength(1,1)\nexport const BackSlashlength = FindLength(1,-1)\n//judge length exist\nexport const JudgeWinner = length => (CurrentPoint , Squares) =>\n{\n    return  Rowlength(length)(CurrentPoint,Squares) >= length || \n    Columnlength(length)(CurrentPoint,Squares) >= length ||\n    Slashlength(length)(CurrentPoint,Squares) >= length  ||\n    BackSlashlength(length)(CurrentPoint,Squares) >= length \n}\n// ============\n\nexport const ProcessTioTeoTicSpecial = (ProcessObject) => {\n    return ProcessObject = compose(\n        TTTSJudge,\n        addNewChess,\n        removeOldChess\n    )(ProcessObject)\n}\n// remove the most old chess \nexport const removeOldChess = (ProcessObject = {}) => {\n    let squares = ProcessObject.squares\n    let lists = ProcessObject.lists\n    if (lists.length >= 6) {\n        let oldchess = {\n            rowskey: lists[0].rowskey,\n            columnskey: lists[0].columnskey,\n            value: \"\",\n            owner: \"\",\n            lock: false,\n        }\n        lists = lists.filter((_chess,index) => index !== 0)\n        squares = setChessToSquares(oldchess,squares)\n    }\n    ProcessObject.squares = squares\n    ProcessObject.lists = lists\n    return ProcessObject\n}\nexport const addNewChess = (ProcessObject = {}) => {\n    let chess = ProcessObject.chess\n    ProcessObject.lists = addChessToLists(chess,ProcessObject.lists)\n\tProcessObject.actionlists = addChessToLists(chess,ProcessObject.actionlists)\n    ProcessObject.squares = setChessToSquares(chess,ProcessObject.squares)\n    return ProcessObject\n}\nexport const TTTSJudge = (ProcessObject = {}) => {\n    ProcessObject.gamestate =  (JudgeWinner(3)(ProcessObject.chess,ProcessObject.squares)) ? \"Game End\" : \"Game Playing\"\n    return ProcessObject\n}","import { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { GamePage } from \"../ui/page\";\nimport { SquaresDeepCopy } from \"../../functions/gamebasics\";\nimport { TTTSJudge, addNewChess, removeOldChess,  } from '../../functions/connectgame'\n\nexport class TioTeoTicForm extends GamePage {\n\tmainchange = (rowskey, columnskey) => {\n\t\tconst history = this.state.history.slice(0, this.state.gameinfo.turns + 1);\n    const current = history[history.length - 1];\n\t\tconst player = current.nowplayer\n\t\tconst info = this.state.gameinfo\n\t\tlet newsquares = SquaresDeepCopy(current.squares);\n\t\t// check broad is lock\n    if (newsquares[rowskey][columnskey].lock === true || info.gamestate === \"Game End\")\n\t\t\treturn\n\t\t// construct new chess\n\t\tconst  newchess = {\n\t\t\trowskey: rowskey,\n      columnskey: columnskey,\n      value: (player === \"player1\") ? \"O\" : \"X\",\n\t\t\towner: player,\n\t\t\tlock: true,\n\t\t}\n\t\t// use compose function( from redux,js) to processing state, and get new state\n\t\tlet processobject = compose(\n\t\t\tTTTSJudge,\n\t\t\taddNewChess,\n\t\t\tremoveOldChess\n\t)({\n\t\tsquares: newsquares,\n\t\tlists: current.showlists.slice(),\n\t\tactionlists: info.actionlists.slice(),\n\t\tchess: newchess,\n\t\tgamestate: info.gamestate,\n\t})\n\t\t// set state\n\t\tlet winner = \"\"\n\t\tlet loser = \"\"\n\tif (processobject.gamestate === \"Game End\") {\n\t\t\twinner = player\n\t\t\tloser = (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t}\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: processobject.squares,\n\t\t\t\t\tshowlists: processobject.lists,\n\t\t\t\t\tnowplayer: (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t\t\t}]),\n\t\t\tgameinfo: {\n\t\t\t\t...info,\n\t\t\t\tactionlists: processobject.actionlists,\n\t\t\t\tturns: info.turns + 1,\n\t\t\t\tgamestate: processobject.gamestate,\n\t\t\t\twinner: winner,\n\t\t\t\tloser: loser,\n\t\t\t},\n\t\t\t})\n  }\n}\n\n\n\n\n\n// ========================================\n\nTioTeoTicForm.propTypes = {\n  squares: PropTypes.array,\n  list: PropTypes.array,\n  info: PropTypes.object,\n  addlist: PropTypes.func,\n  dellist: PropTypes.func,\n  addchess: PropTypes.func,\n  changeplayer: PropTypes.func,\n  endgame: PropTypes.func,\n  begingame: PropTypes.func,\n  beginboard: PropTypes.func,\n  clearlist: PropTypes.func\n}","\nexport const calculationArrays = (chess ={}, squares = []) => {\n\tlet resultArray = []\n\tlet targetvalue = chess.value\n\tlet lengthx = squares.length\n\tfor (let i = 0 ; i < 9 ; i++) {\n\t\tlet vec = [Math.floor( i / 3) - 1 ,(i % 3) - 1]\n\t\tresultArray[i] = []\n\t\tif (vec === [0,0]) {\n\t\t\tcontinue\n\t\t}\n\t\tfor (let j = 1, jth = lengthx ; j < jth ; j ++) {\n\t\t\tlet tapointx = chess.rowskey + vec[0] * j\n\t\t\tlet tapointy = chess.columnskey + vec[1] * j\n\t\t\tlet tavalue = \"\"\n\t\t\tif ( tapointx >= 0 && tapointx < lengthx && tapointy >= 0 && tapointy < squares[tapointx].length) {\n\t\t\t\ttavalue = squares[chess.rowskey + vec[0] * j][chess.columnskey + vec[1] * j].value\n\t\t\t}\n\t\t\tif (tavalue === \"\") {\n\t\t\t\tresultArray[i] = []\n\t\t\t\tbreak\n\t\t\t}\n\t\t\telse if (tavalue === targetvalue) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\telse if (tavalue !== targetvalue) {\n\t\t\t\tresultArray[i][j - 1] = {\n\t\t\t\t\trowskey: chess.rowskey + vec[0] * j ,\n\t\t\t\t\tcolumnskey: chess.columnskey + vec[1] * j ,\n\t\t\t\t\tvalue: chess.value,\n\t\t\t\t\towner: chess.owner,\n\t\t\t\t\tlock: chess.lock\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn resultArray\n}\n","import { compose } from 'redux';\n import { GamePage } from \"../ui/page\";\nimport { SquaresDeepCopy ,  addChessToLists, setChessToSquares} from \"../../functions/gamebasics\";\nimport { calculationArrays } from \"../../functions/catchgame\";\n\nexport class OthelloForm extends GamePage {\n\tmainchange = (rowskey, columnskey) => {\n\t\tconst history = this.state.history.slice(0, this.state.gameinfo.turns + 1);\n\t\tconst current = history[history.length - 1];\n\t\tconst player = current.nowplayer\n\t\tconst info = this.state.gameinfo\n\t\tlet newsquares = SquaresDeepCopy(current.squares);\n\t\t// check broad is lock\n    if (newsquares[rowskey][columnskey].lock === true || info.gamestate === \"Game End\")\n\t\t\treturn\n\t\t// construct new chess\n\t\tconst  newchess = {\n\t\t\trowskey: rowskey,\n      columnskey: columnskey,\n      value: (player === \"player1\") ? \"O\" : \"X\",\n\t\t\towner: player,\n\t\t\tlock: true,\n\t\t}\n\t\t// use compose function( from redux,js) to processing state, and get new state\n\t\tlet processobject = compose(\n\t\t\tJudgeGame,\n\t\t\torganizeBoard,\n\t\t\taddNewChess,\n\t)({\n\t\tsquares: newsquares,\n\t\tplayer1chess: current.player1chess,\n\t\tplayer2chess: current.player2chess,\n\t\tactionlists: info.actionlists.slice(),\n\t\tchess: newchess,\n\t\tgamestate: info.gamestate,\n\t})\n\t\t// set state\n\t\tlet winner = \"\"\n\t\tlet loser = \"\"\n\t\tif (processobject.gamestate === \"Game End\") {\n\t\t\tif (processobject.player1chess > processobject.player2chess) {\n\t\t\t\twinner = \"player1\"\n\t\t\t\tloser = \"player2\"\n\t\t\t}\n\t\t\telse if (processobject.player2chess > processobject.player1chess) {\n\t\t\t\twinner = \"player2\"\n\t\t\t\tloser = \"player1\"\n\t\t\t}\n\t\t\telse {\n\t\t\t\twinner = \"No Winner\"\n\t\t\t\tloser = \"No Loser\"\n\t\t\t}}\n\t\tthis.setState({\n\t\t\thistory: history.concat([\n\t\t\t\t{\n\t\t\t\t\tsquares: processobject.squares,\n\t\t\t\t\tplayer1chess:  processobject.player1chess,\n\t\t\t\t\tplayer2chess:  processobject.player2chess,\t\n\t\t\t\t\tnowplayer: (player === \"player1\") ? \"player2\" : \"player1\"\n\t\t\t\t}]),\n\t\t\tgameinfo: {\n\t\t\t\t...info,\n\t\t\t\tactionlists: processobject.actionlists,\n\t\t\t\tturns: info.turns + 1,\n\t\t\t\tgamestate: processobject.gamestate,\n\t\t\t\twinner: winner,\n\t\t\t\tloser: loser,\n\t\t\t},\n\t\t})\n}\n}\n\n//--------------------------------------\n\nconst addNewChess = (ProcessObject = {}) => {\n\tlet chess = ProcessObject.chess\n\tProcessObject.actionlists = addChessToLists(chess,ProcessObject.actionlists)\n\tProcessObject.squares = setChessToSquares(chess,ProcessObject.squares)\n\treturn ProcessObject\n}\nconst organizeBoard = (ProcessObject = {}) => {\n\tlet chess = ProcessObject.chess\n\tlet squares = ProcessObject.squares\n\tlet player = chess.owner\n\t//caculate the array to change chess\tand flatten 2-dimension-array to 1-dimension-array\n\tconst changeArrays = calculationArrays(chess, squares).reduce((accumulator,currentValue)=> accumulator.concat(currentValue),[])\n\tlet changenumber = changeArrays.length\n\t//change chess by array\n\tif (changenumber > 0){\n\t\tProcessObject.squares = changeArrays.reduce((presquares,nowchess) => setChessToSquares(nowchess,presquares),squares)\n\t}\n\t//re-caculate the number of player's chess\n\tif (player === \"player1\") {\n\t\tProcessObject.player1chess += changenumber + 1\n\t\tProcessObject.player2chess -= changenumber\n\t}\n\telse {\n\t\tProcessObject.player1chess -= changenumber\n\t\tProcessObject.player2chess += changenumber + 1\n\t}\n\treturn ProcessObject\n}\nconst JudgeGame = (ProcessObject = {}) => {\n\tlet player1chess = ProcessObject.player1chess\n\tlet player2chess = ProcessObject.player2chess\n\tif ( /*(player1chess === 0) || (player2chess === 0) || */(player1chess + player2chess >= 64) ) {\n\t\tProcessObject.gamestate = \"Game End\"\n\t}\n\telse {\n\t\tProcessObject.gamestate = \"Game Playing\"\n\t}\n\treturn ProcessObject\n}","import {connect } from 'react-redux';\nimport { AddGameData, DelGameData } from \"../../redux/actions/GameDataAction\";\nimport { TioTeoTicForm } from \"./TioTeoTic\";\nimport { OthelloForm } from \"./othello\";\n\nconst mapStateToProps = gamename => state => ({\n\tlocalstore: (state.gameDatas.length !== 0) ?\n\tstate.gameDatas.filter((gamedata) => gamedata.gamename === gamename) :\n\t[]\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tdeldata(id) {\n\t\tdispatch(DelGameData(id))\n\t},\n\tadddata(gamename,actionlists) {\n\t\tdispatch(AddGameData(gamename,actionlists))\n\t}\n})\n\nconst HOCforconnect = (component, gamename) => {\n\treturn connect(\n\t\tmapStateToProps(gamename),\n\t\tmapDispatchToProps\n\t\t)(component)\n}\n\nexport const TioTeoTicGame = HOCforconnect(TioTeoTicForm, \"TioTeoTic\")\nexport const OthelloGame = HOCforconnect(OthelloForm,\"Othello\")\n","import { GAMEDATA } from \"../constants\";\nimport { v4 } from 'uuid';\n\nexport const AddGameData = (gamename,chesshistory) => ({\n\ttype: GAMEDATA.ADD_GAMEDATA,\n\tid: v4(),\n\tgamename,\n\tdate: new Date(),\n\tchesshistory,\n})\n\nexport const DelGameData = (id) => ({\n\ttype: GAMEDATA.DEL_GAMEDATA,\n\tid,\n})","export const TicTacToeInitialData ={\n\thistory: [{\n\t\t\tsquares : Array(3).fill(Array(3).fill({value:\"\", owner:\"\", lock: false})), // construct 3* 3 squares \n\t\t\tshowlists : [],\n\t\t\tnowplayer: \"player1\"\n\t}],\n\tgameinfo:{\n\t\t\tgamename: \"TioTeoTic\",\n\t\t\tgamestate: \"Game Begin\",\n\t\t\tplayer1: \"Tom\",\n\t\t\tplayer2: \"Jerry\",\n\t\t\twinner: \"\",\n\t\t\tloser:\"\",\n\t\t\tturns: 0,\n\t\t\tactionlists:[],\n\t},\n}\n\nexport const OthelloInitialData ={\n\thistory: [{\n\t\t\t\t\tsquares : Array(8).fill(Array(8).fill({value:\"\", owner:\"\", lock: false})), // construct 8* 8 squares \n\t\t\t\t\tplayer1chess:  0,\n\t\t\t\t\tplayer2chess:  0,\n\t\t\t\t\tnowplayer: \"player1\"\n\t}],\n\tgameinfo:{\n\t\t\t\t\tgamename: \"Othello\",\n\t\t\t\t\tgamestate: \"Game Begin\",\n\t\t\t\t\tplayer1: \"Tom\",\n\t\t\t\t\tplayer2: \"Jerry\",\n\t\t\t\t\twinner: \"\",\n\t\t\t\t\tloser:\"\",\n\t\t\t\t\tturns: 0,\n\t\t\t\t\tactionlists:[],\n\t},\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { MainMenu } from './MainMenu'\nimport '../../stylesheets/pages.scss'\nimport { OthelloGame, TioTeoTicGame } from \"../contain/contain\";\nimport { OthelloInitialData, TicTacToeInitialData } from \"./initialstatedata\";\nimport { PAGES } from \"../../consters/pagesconster\";\n\nconst PageTemplate = ({children}) =>\n    <div className=\"page\">\n        <MainMenu />\n        {children}\n    </div>\n\n\nexport const Home = () =>\n    <section className=\"home\" >\n        <hi>[首頁]</hi>\n        <nav>\n            {// Use conster of Pages to map Home Page\n                PAGES.map((page) => {\n                return <Link to ={page.id} >{`[${page.zh_name}]`}</Link>\n            })}\n        </nav>\n    </section>\n\n    export const TicTacToe = () =>\n    <PageTemplate>\n            <TioTeoTicGame initialstate = {TicTacToeInitialData} />\n    </PageTemplate>\n\nexport const Othello = () =>\n    <PageTemplate>\n        <OthelloGame initialstate = {OthelloInitialData}/>\n    </PageTemplate>\n\nexport const Whoops404 = ({ location }) =>\n    <div className=\"Whoops-404\">\n        <hi>找不到以'{location.pathname}'為名稱的分頁</hi>\n    </div>","import { PLAYERDATA } from \"../constants\"\n\nexport const playerData = (state = {}, action) => {\n\tswitch (action.type) {\n\t\tcase PLAYERDATA.RE_NAME:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tplayer1: action.player1,\n\t\t\t\tplayer2: action.player2,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n","import { GAMEDATA } from \"../constants\";\n\nexport const gameData = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase GAMEDATA.ADD_GAMEDATA:\n\t\t\treturn [{\n\t\t\t\tid: action.id,\n\t\t\t\tgamename: action.gamename,\n\t\t\t\tdate: action.date,\n\t\t\t\tchesshistory: action.chesshistory,\n\t\t\t}]\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const gameDatas = (state = [] , action) => {\n\tswitch (action.type) {\n\t\tcase GAMEDATA.ADD_GAMEDATA:\n\t\t\treturn state.concat(gameData([],action))\n\t\tcase GAMEDATA.DEL_GAMEDATA:\n\t\t\treturn state.filter((data) => data.id !== action.id)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport {playerData  } from \"./reducers/PlayerDataReducers\";\nimport { gameDatas } from \"./reducers/GameDataReducer\";\n\nconst initialDate ={\n\tgameDatas:[],\n\tplayerData:{},\n}\n\nconst logger = store => next => action => {\n\tlet result\n\t//console.groupCollapsed(\"dispatching\", action.type)\n\t//console.log('prev state' , store.getState())\n\t//console.log('action', action)\n\tresult = next(action)\n\t//console.log('next state', store.getState())\n\t//console.groupEnd()\n\treturn result\n}\n\nconst saver = store => next => action => {\n\tlet result = next(action)\n\tlocalStorage['redux-store'] = JSON.stringify(store.getState())\n\treturn result\n}\n\nexport const storeFactory = (initialState = initialDate ) =>(\n\tapplyMiddleware(logger, saver)(createStore)(\n\t\tcombineReducers({gameDatas, playerData}) ,\n\t\t(localStorage['redux-store']) ?\n\t\tJSON.parse(localStorage['redux-store']) :\n\t\tinitialState\n\t)\n)\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux';\nimport {\n  HashRouter,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport * as Pages from './components/menu/pages'\nimport { PAGES } from \"./consters/pagesconster\";\nimport { storeFactory } from \"./redux/Store\";\n\nwindow.React = React\n\nconst store = storeFactory()\n\nrender(\n  <Provider store={store} >\n  <HashRouter>\n  <div className=\"main\" >\n  <Switch>\n  <Route exact path=\"/\" component={Pages[\"Home\"]} />\n  {// Use conster of Pages to map Route\n    PAGES.map((page) => {\n    return <Route path={page.router} component={Pages[page.id]} />\n  })}\n  <Route component={Pages.Whoops404} />\n  </Switch>\n  </div>\n  </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}